The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
T
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
T
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
T
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

O
O
O
How do I convert C headers to rust
What are your goto languages for starting new projects? Python fags need not apply.

a href="#p71686226" class="quotelink"
&gt;&gt;71686226
/a

br
just check that the difference in x is the same as the difference in y and that object2&#039;s coords are greater than object1&#039;s

a href="#p71686282" class="quotelink"
&gt;&gt;71686282
/a

br
Almost always C.

a href="#p71686283" class="quotelink"
&gt;&gt;71686283
/a

br
but how does that equate to 45?

a href="#p71686282" class="quotelink"
&gt;&gt;71686282
/a

br
Python.

a href="#p71686299" class="quotelink"
&gt;&gt;71686299
/a

br
it will always be 45 if the difference in both x and y between the objects are equal

a href="#p71686311" class="quotelink"
&gt;&gt;71686311
/a

br
Terrible.

a href="#p71686320" class="quotelink"
&gt;&gt;71686320
/a

br
no u

a href="#p71686298" class="quotelink"
&gt;&gt;71686298
/a

br
Do you use Glib/something similar or just write that sort of stuff yourself? Maybe I&#039;m a brainlet but reinventing the wheel seems to be a bit of a problem when starting a new project in C. Particularly with strings.

a href="#p71686211" class="quotelink"
&gt;&gt;71686211
/a

br

span class="quote"
&gt;What are you working on, /g/?
/span

br
Learning full stack webdev atm. Am planning on cloning niche websites like zillow/airbnb and market it to some people on nigeria and mongolia.

a href="#p71686337" class="quotelink"
&gt;&gt;71686337
/a

br

span class="quote"
&gt;glib
/span

br

br
Absolutely fucking disgusting

a href="#p71686226" class="quotelink"
&gt;&gt;71686226
/a

br
Stay in school and learn basic trigonometry? I forget when you cover this stuff, maybe at 14 or so?

a href="#p71686282" class="quotelink"
&gt;&gt;71686282
/a

br
used to be sepples, now it&#039;s rust

a href="#p71686502" class="quotelink"
&gt;&gt;71686502
/a

br
How do I into rust? I feel like I&#039;m about to go full c++ autism mode

a href="#p71686226" class="quotelink"
&gt;&gt;71686226
/a

br
basic trig my dude, the ratio of height to width is used to calculate the slope, which is directly related to the angle from the normal

a href="#p71686509" class="quotelink"
&gt;&gt;71686509
/a

br
I used based haskellman&#039;s intro
br
https://www.snoyman.com/blog/2018/1
wbr
0/rust-crash-course-01-kick-the-tir
wbr
es

a href="#p71686509" class="quotelink"
&gt;&gt;71686509
/a

br
First you buy your programming socks, then you get that book by Klobnik.

a href="#p71686282" class="quotelink"
&gt;&gt;71686282
/a

br
Whatever is best suited for the job?
S

a href="#p71686509" class="quotelink"
&gt;&gt;71686509
/a

br

a href="#p71686525" class="quotelink"
&gt;&gt;71686525
/a

br

a href="#p71686526" class="quotelink"
&gt;&gt;71686526
/a

br

br
Forgot to mention: I&#039;d like to write freestanding programs so if there&#039;s docs related to that please link them. I have lots of C experience and some C++

a href="#p71686533" class="quotelink"
&gt;&gt;71686533
/a

br
So C++ always

a href="#p71686541" class="quotelink"
&gt;&gt;71686541
/a

br
It&#039;s just an extra u, you can spell it either color or colour it doesn&#039;t matter.

a href="#p71686552" class="quotelink"
&gt;&gt;71686552
/a

br
then try this also:
br
https://os.phil-opp.com/

a href="#p71686541" class="quotelink"
&gt;&gt;71686541
/a

br

span class="quote"
&gt;not usign multiple concatenated strings
/span

br

br
lmao

a href="#p71686599" class="quotelink"
&gt;&gt;71686599
/a

br

span class="quote"
&gt;writing shaders as strings
/span


a href="#p71686337" class="quotelink"
&gt;&gt;71686337
/a

br

span class="quote"
&gt;Glib
/span

br
Fuck no. I avoid that shit like the plague.

a href="#p71686605" class="quotelink"
&gt;&gt;71686605
/a

br
That&#039;s what he did. If he must do that then at least do it properly

a href="#p71686557" class="quotelink"
&gt;&gt;71686557
/a

br

span class="quote"
&gt;inb4 i was only pretending to be retarded
/span

C++ would absolutely be the best language if they made a C++ lite that removed half the shit nobody uses anyway.

a href="#p71686685" class="quotelink"
&gt;&gt;71686685
/a

br
They could call it C.

a href="#p71686685" class="quotelink"
&gt;&gt;71686685
/a

br
So Go? It&#039;s like C but better.

a href="#p71686742" class="quotelink"
&gt;&gt;71686742
/a

br

span class="quote"
&gt;GC
/span

br

br
And a shitty GC at that.

a href="#p71686685" class="quotelink"
&gt;&gt;71686685
/a

br
just dont use
Is Hacker&#039;s Delight worth the read?
br
Or there is a library that sums up everything in it.



a href="#p71686924" class="quotelink"
&gt;&gt;71686924
/a

br

span class="quote"
&gt;library for bitwise ops
/span

br

br
the absolute state of the dpt

a href="#p71686991" class="quotelink"
&gt;&gt;71686991
/a

br
Amazing anon. Please open source it the world needs more competition in the proprietary 3D graphics space

a href="#p71687013" class="quotelink"
&gt;&gt;71687013
/a

br
if you say so bud


Does Lisp have fmap?

a href="#p71687053" class="quotelink"
&gt;&gt;71687053
/a

br
It should be jtoddlers in this thread.
Reading the rust book. Wow, this language is a pleasure to write in. Should&#039;ve done this sooner. Much better than Go.

a href="#p71686211" class="quotelink"
&gt;&gt;71686211
/a

br
Working on a portfolio manager for my peer to peer lending since websites are shit and excel can only take you so far before becoming a bloated monster.
hi please hate https://github.com/gelbpunkt a little. He is a python fag

a href="#p71687395" class="quotelink"
&gt;&gt;71687395
/a

br

span class="quote"
&gt;all those oss contributions
/span

br

br
You&#039;re the faggot here



a href="#p71686299" class="quotelink"
&gt;&gt;71686299
/a

br
Because we use a system where 360 degrees is a full circle. For anything beyond practical real world measuring you&#039;ll want to work with radians instead.
br

br
You really shouldn&#039;t be learning python if you don&#039;t understand basic trigonometry. Math is a fundamental part of programming.
I&#039;ve written a B-tree in C and I&#039;m having a bit of trouble extending
br
it to take arbitrary keys/values. Mostly, I&#039;m having trouble with freeing the values whenever a delete occurs. I figure I&#039;ve got two options: require the
br
user to provide a free function that&#039;s called automatically on deletes, or 
br
just have delete return a pointer to the deleted value and let the user free
br
it however they want.
br

br
Anyone have any advice?

a href="#p71687587" class="quotelink"
&gt;&gt;71687587
/a

br
The first sounds more straight forward and less prone to bugs due to hidden logic desu.



a href="#p71687587" class="quotelink"
&gt;&gt;71687587
/a

br
Copy the user&#039;s data into the tree yourself and manage your own memory so the user doesn&#039;t have to?

a href="#p71687624" class="quotelink"
&gt;&gt;71687624
/a

br

a href="#p71687619" class="quotelink"
&gt;&gt;71687619
/a

br
Yes, be consistent. If the rest of your btree functions copy user data then the btree should free it. If the user provided reference is what is kept in the btree, then the user should be responsible for freeing it.

a href="#p71687639" class="quotelink"
&gt;&gt;71687639
/a

br
If the guy&#039;s a bro he implements both and supports it by providing an option during btree creation.



a href="#p71687587" class="quotelink"
&gt;&gt;71687587
/a

br
Wouldn&#039;t it make more sense to write a b-tree in B?
Is anyone using Magit? I can&#039;t figure out how to commit and push to a new remote branch in one go.

a href="#p71687801" class="quotelink"
&gt;&gt;71687801
/a

br
Inary ree.

a href="#p71687071" class="quotelink"
&gt;&gt;71687071
/a

br
yes
br
it&#039;s not called fmap though



a href="#p71686211" class="quotelink"
&gt;&gt;71686211
/a

br
Lisp is the most powerful programming language.

a href="#p71687904" class="quotelink"
&gt;&gt;71687904
/a

br
yes

a href="#p71687619" class="quotelink"
&gt;&gt;71687619
/a

br
god there&#039;s nothing I love more than women making faux pas
br
for such a social creature to make a mistake and be ridiculed and excluded, its exquisite



a href="#p71687929" class="quotelink"
&gt;&gt;71687929
/a

br
You&#039;re mean spirited.

a href="#p71687893" class="quotelink"
&gt;&gt;71687893
/a

br
What&#039;s it called?

a href="#p71687718" class="quotelink"
&gt;&gt;71687718
/a

br
Why has your coworker put his personal repo on the company gitlab hub?

a href="#p71687969" class="quotelink"
&gt;&gt;71687969
/a

br
map

a href="#p71686211" class="quotelink"
&gt;&gt;71686211
/a

br
What&#039;s the best java IDE? People at uni keep arguing between Eclipse and Intellij for some reason.

a href="#p71687981" class="quotelink"
&gt;&gt;71687981
/a

br

span class="quote"
&gt;java IDE
/span

br
indian designated environment?

a href="#p71687977" class="quotelink"
&gt;&gt;71687977
/a

br
But doesn&#039;t this only work for conventional lists?

a href="#p71687981" class="quotelink"
&gt;&gt;71687981
/a

br
Intellij &gt; all.

a href="#p71687981" class="quotelink"
&gt;&gt;71687981
/a

br
Intellij has a very competent backend. I use spacemacs with Java LSP, mostly because I love spacemacs and Java LSP is good enough for me

a href="#p71688004" class="quotelink"
&gt;&gt;71688004
/a

br
not just lists, but anything that is a proper sequence.

a href="#p71688045" class="quotelink"
&gt;&gt;71688045
/a

br

span class="quote"
&gt;not just lists, but lists
/span


a href="#p71688053" class="quotelink"
&gt;&gt;71688053
/a

br
note the use of the word &quot;proper,&quot; so not circular or dotted lists.

a href="#p71688045" class="quotelink"
&gt;&gt;71688045
/a

br
So lists and vectors?
If your favorite language doesn&#039;t have an official standard, it&#039;s shit.

a href="#p71687941" class="quotelink"
&gt;&gt;71687941
/a

br
yes, and?

a href="#p71688069" class="quotelink"
&gt;&gt;71688069
/a

br
anything that is a proper sequence as defined by the standard, yes

a href="#p71688085" class="quotelink"
&gt;&gt;71688085
/a

br
Well that&#039;s fucking useless.
br
What&#039;s the point of it being &quot;generic&quot; if it&#039;s only generic over two types and it&#039;s not extensible?
What is it about programming that makes everyone either an insufferable cunt or a faggot?

a href="#p71688096" class="quotelink"
&gt;&gt;71688096
/a

br
if by two types, you mean lists and vectors, those are just two subtypes of sequence. as long as anything is a proper sequence, then it qualifies.

a href="#p71688101" class="quotelink"
&gt;&gt;71688101
/a

br
or in your case, both

a href="#p71688122" class="quotelink"
&gt;&gt;71688122
/a

br
What are the other sequences?

a href="#p71688122" class="quotelink"
&gt;&gt;71688122
/a

br
in haskell map takes a pure function (unlike traverse), and there are many cases like binary trees where no order is required to map

a href="#p71688126" class="quotelink"
&gt;&gt;71688126
/a

br
rekt

a href="#p71688128" class="quotelink"
&gt;&gt;71688128
/a

br
by default, you get vector and list, but this in itself is extensible. simply define a new subtype of sequence.

a href="#p71688141" class="quotelink"
&gt;&gt;71688141
/a

br
i see
br
so you probably want something like apply, which simply applies a function to its arguments (could be anything)

a href="#p71688186" class="quotelink"
&gt;&gt;71688186
/a

br
I think he&#039;s just trying to say he likes typeclasses

a href="#p71688175" class="quotelink"
&gt;&gt;71688175
/a

br
If it&#039;s extensible that&#039;s fine. How do you do this?

a href="#p71688186" class="quotelink"
&gt;&gt;71688186
/a

br
learn haskell and stop making stupid replies

span class="quote"
&gt;mfw passing functions as parameters in clojure coming from a java background
/span


a href="#p71688101" class="quotelink"
&gt;&gt;71688101
/a

br
Because it&#039;s a topic where it&#039;s incredibly easy to pretend you know shit when you actually don&#039;t, unlike, say, discussions about physics or math.
android/kotlin question
br
How to execute many retrofit requests in parallel and wait for all of them to finish?

a href="#p71688207" class="quotelink"
&gt;&gt;71688207
/a

br
i already have
br
if i&#039;m going to use something that is inherently useless, i am going to use lisp

a href="#p71688101" class="quotelink"
&gt;&gt;71688101
/a

br
Acting like an arrogant cunt online is the best part of being a programmer.

a href="#p71688217" class="quotelink"
&gt;&gt;71688217
/a

br
Yeah and?

a href="#p71688204" class="quotelink"
&gt;&gt;71688204
/a

br
just (apply function args)

a href="#p71688101" class="quotelink"
&gt;&gt;71688101
/a

br
They dont have sex.



a href="#p71688217" class="quotelink"
&gt;&gt;71688217
/a

br
Atrocities such as the &quot;strategy pattern&quot; to circumvent the lack of higher oder functions actually exist. Just try to wrap your head around it.
br
[spoiler]Yes, I&#039;m aware newer Java versions have them.[/spoiler]
br
[spoiler]Yes, I know spoiler tags don&#039;t work on /g/.[/spoiler]

a href="#p71688247" class="quotelink"
&gt;&gt;71688247
/a

br
you clearly haven&#039;t

a href="#p71688253" class="quotelink"
&gt;&gt;71688253
/a

br
This. People also underestimate the importance of this.

a href="#p71688217" class="quotelink"
&gt;&gt;71688217
/a

br
The newer java with lambdas and the Function interface is better, I don&#039;t know how people could stand programming in Java before that though.

a href="#p71688271" class="quotelink"
&gt;&gt;71688271
/a

br
believe what you want, no one is stopping you

span class="quote"
&gt;some faggot reserved lots of package names on crate.io and did absolutely nothing with them
/span

br

br
This should be illegal

a href="#p71688288" class="quotelink"
&gt;&gt;71688288
/a

br
good

a href="#p71688288" class="quotelink"
&gt;&gt;71688288
/a

br
So what you&#039;re saying is that cargo is a piece of shit that doesn&#039;t curate in the slightest?
Is there any VM yet that can run linux with modern OpenGL support?

a href="#p71688280" class="quotelink"
&gt;&gt;71688280
/a

br
Anonymous classes were tolerable.
br

br
But having to use them to do recursion with some capture is just... Ugh.

a href="#p71688299" class="quotelink"
&gt;&gt;71688299
/a

br

a href="#p71688302" class="quotelink"
&gt;&gt;71688302
/a

br
Yeah
br
Just ran into this huge faggot with over 50 &quot;todo&quot; packages with really good names
br
I&#039;m not going to be secondary to some squatting faggot
br

br
Are you implying there are alternatives to crates.io tho?

a href="#p71687974" class="quotelink"
&gt;&gt;71687974
/a

br
Your guess is as good as mine

a href="#p71688373" class="quotelink"
&gt;&gt;71688373
/a

br
i&#039;m sure if you really cared, you could bitch about it to people who could resolve this problem

a href="#p71688326" class="quotelink"
&gt;&gt;71688326
/a

br
how do you do this?
C++20 concepts suck balls already.

a href="#p71688373" class="quotelink"
&gt;&gt;71688373
/a

br
Wait, its not namespaced like github&#039;s user/project thing? Because that worked oh so well for rubygems, npm...

a href="#p71688404" class="quotelink"
&gt;&gt;71688404
/a

br
Why?

a href="#p71688448" class="quotelink"
&gt;&gt;71688448
/a

br
Concepts aren&#039;t parametric.

a href="#p71688455" class="quotelink"
&gt;&gt;71688455
/a

br
What does this mean?

a href="#p71688390" class="quotelink"
&gt;&gt;71688390
/a

br
It can&#039;t be solved. Nobody is gonna drop compatibility with the current infrastructure. The only chance is to get it right before building and deploying it, and they fucked up

a href="#p71688475" class="quotelink"
&gt;&gt;71688475
/a

br
well, i suppose the only solution is to give up then and stop using rust.



a href="#p71686211" class="quotelink"
&gt;&gt;71686211
/a

br
If you could wish for only one programming language to exist, which programming language would it be and why?

a href="#p71687940" class="quotelink"
&gt;&gt;71687940
/a

br
like if u crie

a href="#p71688403" class="quotelink"
&gt;&gt;71688403
/a

br

pre class="prettyprint"
void foo(...)
br
{
br
    return new Object(){ void rec(...) { /* ... */ }}.rec(init);
/pre

br
}

a href="#p71688560" class="quotelink"
&gt;&gt;71688560
/a

br
oh i see
br
this is just lambda over let over lambda



a href="#p71688553" class="quotelink"
&gt;&gt;71688553
/a

br
the one i created
br
untold power over the programming cattle, i decide what features they have to work with

a href="#p71688553" class="quotelink"
&gt;&gt;71688553
/a

br
it would have to be assembly because that&#039;s the only one that  could at least in principle be used in every possible use case

a href="#p71688569" class="quotelink"
&gt;&gt;71688569
/a

br
Yes exactly and in Java it&#039;s unusable

a href="#p71688592" class="quotelink"
&gt;&gt;71688592
/a

br
well you could use clojure instead

a href="#p71688581" class="quotelink"
&gt;&gt;71688581
/a

br
So how does that work is it just the last template argument that gets substituted

a href="#p71688553" class="quotelink"
&gt;&gt;71688553
/a

br
haskell without the bad

a href="#p71688601" class="quotelink"
&gt;&gt;71688601
/a

br
As far as I can tell, any template parameters you pass to the concept in a template introducer is just tacked onto the end.
br
So,
br

pre class="prettyprint"
template &lt;Foo&lt;bar&gt; T&gt;
br

/pre

br
Is equivalent to
br

pre class="prettyprint"
template &lt;typename T&gt;
br
    requires Foo&lt;T, bar&gt;
br

/pre

br
I haven&#039;t read the paper, that&#039;s just what I figured out from playing with the concepts implementation in GCC.
br
Also GCC only implements an old TS, so they may have changed it in the current spec. I don&#039;t think they have though.

a href="#p71688581" class="quotelink"
&gt;&gt;71688581
/a

br
are these just rust traits?

a href="#p71688647" class="quotelink"
&gt;&gt;71688647
/a

br
They solve the same problem but they work a bit differently.

a href="#p71688647" class="quotelink"
&gt;&gt;71688647
/a

br
Rust is neither the only nor the first language to support traits.
br
https://en.wikipedia.org/wiki/Trait
wbr
_(computer_programming)#Supported_l
wbr
anguages

span class="deadlink"
&gt;&gt;71688596
/span

br
so, cirno?

a href="#p71686282" class="quotelink"
&gt;&gt;71686282
/a

br
ocaml or c

a href="#p71688700" class="quotelink"
&gt;&gt;71688700
/a

br
He must be talking about Shirase-san!

span class="deadlink"
&gt;&gt;71688596
/span

br
Satania is cuter than Bjarne Stroustrup.

span class="deadlink"
&gt;&gt;71688596
/span

br
Not this shit again

span class="deadlink"
&gt;&gt;71688596
/span

br
yeah this
br
the age of anime is over

a href="#p71688745" class="quotelink"
&gt;&gt;71688745
/a

br
t. idiot-kun

pre class="prettyprint"
#include &lt;Windows.h&gt;
br

br
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
br
                   LPSTR lpCmdLine, int nCmdShow)
br
{
br
    MessageBox(
br
        NULL,
br
        TEXT(&quot;foo&quot;),
br
        TEXT(&quot;MESSAGE&quot;),
br
        MB_OK
br
    );
br
    return 0;
br
}
/pre


span class="deadlink"
&gt;&gt;71688596
/span

br
It&#039;s always people like you bringing this shit up again and again. _You_ are the one ruining this thread.
br
Fuck off.

span class="deadlink"
&gt;&gt;71688596
/span

br

span class="quote"
&gt;pay homage to
/span

br
gay

a href="#p71688620" class="quotelink"
&gt;&gt;71688620
/a

br

a href="#p71688553" class="quotelink"
&gt;&gt;71688553
/a

br
same

a href="#p71688620" class="quotelink"
&gt;&gt;71688620
/a

br

a href="#p71688777" class="quotelink"
&gt;&gt;71688777
/a

br
not haskell then

a href="#p71687071" class="quotelink"
&gt;&gt;71687071
/a

br
literally every lambda calculus based language has map
Programming languages need a way to disambiguate nouns and verbs.
I started using this editor, and i love it https://micro-editor.github.io/

a href="#p71688315" class="quotelink"
&gt;&gt;71688315
/a

br
just google it lmao
br
but don&#039;t actually use google

a href="#p71688982" class="quotelink"
&gt;&gt;71688982
/a

br
nYou vAre artA adjDumb adjGorilla nNigger

a href="#p71688957" class="quotelink"
&gt;&gt;71688957
/a

br
fmap is more general than map

a href="#p71688982" class="quotelink"
&gt;&gt;71688982
/a

br
Gerunds exist.

a href="#p71689026" class="quotelink"
&gt;&gt;71689026
/a

br
what the fuck is a gerund

a href="#p71689037" class="quotelink"
&gt;&gt;71689037
/a

br
A nominalised verb. A first class function, if you like.

a href="#p71689053" class="quotelink"
&gt;&gt;71689053
/a

br
that is inelegant.
br
&quot;Mapping&quot; does not sound like a very good name for a map data structure

a href="#p71689065" class="quotelink"
&gt;&gt;71689065
/a

br
What is it you .want by distinguishing nouns and verbs?
Does every language have a package manager now? Perl, ruby, python, javascript, lua, go, rust... They all have fucking package managers.
br

br
What is this bullshit

a href="#p71689109" class="quotelink"
&gt;&gt;71689109
/a

br
No, only hip ones.

a href="#p71689079" class="quotelink"
&gt;&gt;71689079
/a

br
I want to have a data structure called map, but I also want a function called map.
br
The two are completely different semantically, but the only difference in their naming is that one&#039;s a noun and the other is a verb.
br
But I still should be able to &quot;create a map&quot; and &quot;map these items&quot; without having to use a different word for each.
br
See, in &quot;create a map&quot; and &quot;map these items&quot;, the sentence structure perfectly disambiguates which word I&#039;m talking about. Programming languages should allow the same somehow.

a href="#p71689126" class="quotelink"
&gt;&gt;71689126
/a

br
Use Java or common lisp or even C then

a href="#p71689126" class="quotelink"
&gt;&gt;71689126
/a

br
[struct]
br
struct map;
br
void map(...);
br
[/struct]

a href="#p71689202" class="quotelink"
&gt;&gt;71689202
/a

br

span class="quote"
&gt;[struct]
/span

br
nice job anon



span class="deadlink"
&gt;&gt;71688596
/span

br
uhhh
anime

a href="#p71689331" class="quotelink"
&gt;&gt;71689331
/a

br

a href="#p71689331" class="quotelink"
&gt;&gt;71689331
/a

br
Lmao #gottem . I reported that cunt on 20 some proxies. Let this be a lesson for you reddit normies.

a href="#p71689402" class="quotelink"
&gt;&gt;71689402
/a

br
ironic shitposting is still shitposting

a href="#p71689448" class="quotelink"
&gt;&gt;71689448
/a

br
You want to be next?

a href="#p71689454" class="quotelink"
&gt;&gt;71689454
/a

br
n-nani?!



a href="#p71689466" class="quotelink"
&gt;&gt;71689466
/a

br
That&#039;s not a trick, that&#039;s a standard feature.



a href="#p71689473" class="quotelink"
&gt;&gt;71689473
/a

br
Why is the syntax for raw string literals so fucking weird. I doubt the average c++ coder knows about it. Kinda like how no one knows about tui mode in gdb.

a href="#p71689523" class="quotelink"
&gt;&gt;71689523
/a

br
There&#039;s nothing weird about it.

a href="#p71689466" class="quotelink"
&gt;&gt;71689466
/a

br
Since when does cpp have this

a href="#p71689573" class="quotelink"
&gt;&gt;71689573
/a

br
#6 on this list.
br

br
https://en.cppreference.com/w/cpp/l
wbr
anguage/string_literal

a href="#p71689523" class="quotelink"
&gt;&gt;71689523
/a

br
a lot of languages unfortunately have odd syntax for &quot;string blocks&quot; because when they were originally designed it was lol why would anyone need anything other than a single line?

a href="#p71689688" class="quotelink"
&gt;&gt;71689688
/a

br
Why have delimiters though? 
br

br
I wonder how many people have R&quot;FOO( in their code.
I know the bare minimum of programming and can solve simple problems in Java or C. I wanted to learn C++ and I&#039;m reading Stroustrup&#039;s Principles and Practice Using C++ from the start, doing every single drill and exercise, even the most trivial ones. Can I really learn to program like this?
Just found the greatest string copy of all time
br

pre class="prettyprint"
while (*dst++ = *src++);
/pre




a href="#p71689859" class="quotelink"
&gt;&gt;71689859
/a

br
You&#039;re creating a new random number generator object for every character which is disgustingly slow and inefficient.

a href="#p71689826" class="quotelink"
&gt;&gt;71689826
/a

br

pre class="prettyprint"
while ((*dst++ = *src++) != &#039;/0&#039;)
br

/pre

br
Ftfy
I

a href="#p71687053" class="quotelink"
&gt;&gt;71687053
/a

br
based

a href="#p71689957" class="quotelink"
&gt;&gt;71689957
/a

br
Anon...

a href="#p71689957" class="quotelink"
&gt;&gt;71689957
/a

br
!= 0 is what the while condition is evaluating anyway. remember that &#039;\0&#039; is actually just 0.

a href="#p71689714" class="quotelink"
&gt;&gt;71689714
/a

br
It&#039;s useful for corner cases. I never ran into it thouhh.

a href="#p71686226" class="quotelink"
&gt;&gt;71686226
/a

br
If we say that the angle is named X and
br
Object3_X = 1
br
Object 3_Y = 0
br
We know that tan(x) = [Object1 Object3]/[Object2 Object3]
br
We then have to solve for X.
br
Welcome to middle school.

a href="#p71690266" class="quotelink"
&gt;&gt;71690266
/a

br
woah

a href="#p71689466" class="quotelink"
&gt;&gt;71689466
/a

br
Does it remove leading white space?
I

a href="#p71690395" class="quotelink"
&gt;&gt;71690395
/a

br
The latter. Use pointers.
br
Like, cur and next.
I&#039;m trying to recreate the functionality of a python script i found in c#, but there are some lines i don&#039;t quite understand:
br

br
(length, unk) = struct.unpack_from(&quot;&lt;II&quot;, dat, offset)
br

span class="quote"
&gt;what is this whole line doing?
/span

br

br
if type(val).__name__ == &#039;ANShape&#039;:
br

span class="quote"
&gt;the _name_ part
/span

br

br
(self.transform, self.IDnumber, self.radius, self.center[0], self.center[1], self.center[2]) = struct.unpack_from(&quot;&lt;hHHhhh&quot;, dat, offset)
br

span class="quote"
&gt;what even the fuck?
/span

br

br
if a python dev would enlighten me that would be great.

a href="#p71690420" class="quotelink"
&gt;&gt;71690420
/a

br
So how do you go about initializing each node? Is it just in an unnamed place in memory?
br
Again, please be slow I&#039;m retarded.



a href="#p71689782" class="quotelink"
&gt;&gt;71689782
/a

br
Yes you can, but it is quite a slow way to learn. Online tutorials and experimentation, and Googling issues you have while programming - this is from my experience the best and quickest way to learn how to program. Of course, once you know one language, it&#039;s easy to learn another language that&#039;s of a similar type. For example, you could learn Python to a decent level from a couple of YouTube videos once you know C++.

a href="#p71690455" class="quotelink"
&gt;&gt;71690455
/a

br
To advance through the list, set cur to point to the next entry.
br
If you want to e.g. add a new node at the end, assuming you&#039;re at the end of the list already, just call malloc and put the returned pointer as the pointer to next in the current node.
I want to start programming and have a feeling Python is a meme. Should I start with C?

a href="#p71690461" class="quotelink"
&gt;&gt;71690461
/a

br

pre class="prettyprint"
Given array nums = [1, 0, -1, 0, -2, 2] 
br
and target = 0.
br

br
-1 1
br
0 0
br
2 -2
br

/pre

br

br
it works but it was not prettiest code.

a href="#p71690527" class="quotelink"
&gt;&gt;71690527
/a

br
Python is actually very good language.

a href="#p71690527" class="quotelink"
&gt;&gt;71690527
/a

br
good news, you no longer have to pick between systems languages and high-level scripting langs.
br
https://nim-lang.org/

a href="#p71690567" class="quotelink"
&gt;&gt;71690567
/a

br

span class="quote"
&gt;FIOC
/span

br
fuck off with your shitty meme lang

a href="#p71690590" class="quotelink"
&gt;&gt;71690590
/a

br
it&#039;s alright little duck, there can exist a world without your precious curlies.
Curly braces make me cum

a href="#p71690623" class="quotelink"
&gt;&gt;71690623
/a

br
Yeah, like in Ada, Pascal and Ruby.

a href="#p71690655" class="quotelink"
&gt;&gt;71690655
/a

br
And Nim doesn&#039;t even need &quot;end&quot;, either.

a href="#p71690455" class="quotelink"
&gt;&gt;71690455
/a

br
Each node has some data and a pointer. And you have a pointer &quot;head&quot; which you use to access the first node.
br

br
Adding a node:
br
If there are no nodes, create a new node with a pointer to null. Point the head to that node.
br
If there is a node, create a new node with a pointer to what the head points to. Point the head to that node.
br

br
A node lives in some random part of memory and you can access it with pointers.

a href="#p71690566" class="quotelink"
&gt;&gt;71690566
/a

br
ok anon i might take a look at learn python the hard way and go from there.

a href="#p71690477" class="quotelink"
&gt;&gt;71690477
/a

br
The thing I am most concerned about is not learning programming properly, &quot;in depth&quot;. I really don&#039;t want to blindly follow solutions for the problems I will face while not fully understand what I&#039;m doing. For example, we have a Debian and a pfSense server at work and I usually have to solve random problems that happen, or to implement some systems, simple things, but I don&#039;t have the slightest clue of what I&#039;m doing, I just google the problem or what I want to do, solve it find another problem, google it again, solve it, rinse and repeat. I feel like working my way through a book will make me more aware of the intrinsics of the language.
Noob here, how do I find projects to contribute?

a href="#p71690737" class="quotelink"
&gt;&gt;71690737
/a

br
do you have previous programming experience? if so just use their python docs and their tutorials they&#039;re really good. python is extremely quick to learn if you already know another language.



a href="#p71690050" class="quotelink"
&gt;&gt;71690050
/a

br

span class="quote"
&gt;http://bedford-computing.co.uk/lea
wbr
rning/wp-content/uploads/2015/10/No
wbr
.Starch.Python.Oct_.2015.ISBN_.1593
wbr
276036.pdf
/span

br

br
I&#039;m using this.

a href="#p71690050" class="quotelink"
&gt;&gt;71690050
/a

br
literally just download pytorch and start making neural networks because it&#039;s that easy

a href="#p71690843" class="quotelink"
&gt;&gt;71690843
/a

br
Set the stage of life in a variable and then choose the correct article afterwards, in one location.

a href="#p71690772" class="quotelink"
&gt;&gt;71690772
/a

br
I don&#039;t, this would be my first one. thanks for the advice anyway!

a href="#p71690843" class="quotelink"
&gt;&gt;71690843
/a

br

br

pre class="prettyprint"
age = 40
br

br
if age &lt; 2:
br
    print(&quot;This person is a baby&quot;)
br
elif (age &gt;= 2) and (age &lt; 4):
br
    print(&quot;This person is a toddler&quot;)
br
elif (age &gt;= 4) and (age &lt; 13):
br
    print(&quot;This person is a kid&quot;)
br
elif (age &gt;= 13) and (age &lt; 20):
br
    print(&quot;This person is a teenager&quot;)
br
elif (age &gt;= 20) and (age &lt; 65):
br
    print(&quot;This person is an adult&quot;)
br
else:
br
    print(&quot;This person is an elder&quot;)
br

/pre


a href="#p71687940" class="quotelink"
&gt;&gt;71687940
/a

br
absolute state of american schools

a href="#p71691002" class="quotelink"
&gt;&gt;71691002
/a

br
That&#039;s a Japanese school

a href="#p71686533" class="quotelink"
&gt;&gt;71686533
/a

br
underrated

a href="#p71690843" class="quotelink"
&gt;&gt;71690843
/a

br
In python, it&#039;s just
br

pre class="prettyprint"
age = 40
br
[&quot;baby&quot;, &quot;toddler&quot;, &quot;kid&quot;, &quot;teenager&quot;, &quot;adult&quot;, &quot;elder&quot;][[n for n, x in enumerate([0, 2, 4, 13, 20, 65]) if x &lt; age][-1]]
br

/pre


a href="#p71691067" class="quotelink"
&gt;&gt;71691067
/a

br
What is what you&#039;re doing called there? I have yet to learn it.

a href="#p71690855" class="quotelink"
&gt;&gt;71690855
/a

br

a href="#p71690869" class="quotelink"
&gt;&gt;71690869
/a

br
thanks, will check it out

a href="#p71691138" class="quotelink"
&gt;&gt;71691138
/a

br
pretty sure that&#039;s list comprehension

a href="#p71691138" class="quotelink"
&gt;&gt;71691138
/a

br
it&#039;s called &quot;retarded&quot;
L

a href="#p71690843" class="quotelink"
&gt;&gt;71690843
/a

br
and here&#039;s what i&#039;d do for the weird indefinite article stuff you&#039;re doing
br

br

pre class="prettyprint"
age = 40
br

br
if age &lt; 2:
br
    stage = &quot;baby&quot;
br
elif age &gt;= 2 and age &lt; 4:
br
    stage = &quot;toddler&quot;
br
elif age &gt;= 4 and age &lt; 13:
br
    stage = &quot;kid&quot;
br
elif age &gt;= 13 and age &lt; 20:
br
    stage = &quot;teenager&quot;
br
elif age &gt;= 20 and age &lt; 65:
br
    stage = &quot;adult&quot;
br
else:
br
    stage = &quot;elder&quot;
br

br
if stage[0] == &#039;a&#039; or stage[0] == &#039;e&#039; or stage[0] == &#039;i&#039; or stage[0] == &#039;o&#039; or stage[0] == &#039;u&#039;:
br
    print(&quot;This person is an &quot; + stage)
br
else:
br
    print(&quot;This person is a &quot; + stage)
br

/pre


a href="#p71691226" class="quotelink"
&gt;&gt;71691226
/a

br
malloc allocates from heap not stack.


If I&#039;m pretty fluent in C# and Java (roughly 2 years experience, maybe 5 years programming in general), how hard will it be to become decent at C++? I&#039;m taking a course that requires &quot;fluency in C++&quot; as a pre-requisite, and I have about a month to prepare.

a href="#p71691226" class="quotelink"
&gt;&gt;71691226
/a

br
It&#039;s allocated on the heap.
br
Duplicating that statement
br

pre class="prettyprint"
int *p = malloc(sizeof(int));
br
int *p = malloc(sizeof(int));
br

/pre

br
would be bad because you&#039;d be declaring p twice. However if you did
br

pre class="prettyprint"
int *p = malloc(sizeof(int));
br
*p = malloc(sizeof(int));
br

/pre

br
this would also be bad because you can no longer free the first block of memory. You no longer have a pointer to it.
br
But yes, you will have a new block of memory somewhere else on the heap.
How can I compile something with jsoncpp via Makefile? Already tried those two. Can&#039;t find anything in the docs either.
br

pre class="prettyprint"
-ljson
br
-ljsoncpp
br

/pre

br

pre class="prettyprint"
fatal error: jsoncpp/json/json.h: No such file or directory
br
#include &lt;jsoncpp/json/json.h&gt;
br

/pre






a href="#p71691300" class="quotelink"
&gt;&gt;71691300
/a

br
Oh and that last asterisk shouldn&#039;t be there my bad

a href="#p71691227" class="quotelink"
&gt;&gt;71691227
/a

br

a href="#p71691207" class="quotelink"
&gt;&gt;71691207
/a

br
Thank you

a href="#p71691302" class="quotelink"
&gt;&gt;71691302
/a

br
you need to tell it where to look for those .h files

a href="#p71691227" class="quotelink"
&gt;&gt;71691227
/a

br

pre class="prettyprint"
if age &lt; 16:
br
    stage = &quot;ripe&quot;
br
else:
br
    stage = &quot;old hag&quot;
br

/pre

br
ftfy

a href="#p71691432" class="quotelink"
&gt;&gt;71691432
/a

br
absofruitly based

a href="#p71691425" class="quotelink"
&gt;&gt;71691425
/a

br
I&#039;m kinda new to writing makefiles by hand, why -lcurl or -lncurses work out of the box and jsoncpp doesn&#039;t?

a href="#p71691466" class="quotelink"
&gt;&gt;71691466
/a

br
Basically, it depends on how it&#039;s installed. There&#039;s a default value it pulls from, but otherwise you have to specify if it isn&#039;t in that default location.
R

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;4K
/span

Rip navi
Rip prices


Damn bros, i thought id get btfo for buying a 2060 by this new 2060 super. Looks like only 2070 owners got btfo

a href="#p71689661" class="quotelink"
&gt;&gt;71689661
/a

br

span class="quote"
&gt;16GB VRAM card BTFO by 8GB
/span




a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
AMD are fucking done. The 2060 Super is as fast as the 5700 XT whilst being cheaper. The 2070 Super is way faster for the same money. Not to mention faster than Radeon VII too for significantly less.
br

br
Just pull out of the GPU market, AMD. It&#039;s getting embarrassing.

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

a href="#p71689758" class="quotelink"
&gt;&gt;71689758
/a

br
tfw i was right 
a href="/g/thread/71503975#p71509064" class="quotelink"
&gt;&gt;71509064
/a
 except for the 1080 part. Even down to the &quot;I don&#039;t know why 2070 exists.&quot; When should I start my youtube channel bros?

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;&#039;new&#039; 2060
/span

br

span class="quote"
&gt;15% price increase
/span

br

span class="quote"
&gt;17% performance increase
/span

br
???
T

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
2080 &gt;= RTX 2070 SUPER &gt;= 1080

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
would consider a 2070 SUPER if the price would&#039;ve been better.
br
399€ please
I

a href="#p71690300" class="quotelink"
&gt;&gt;71690300
/a

br
you mean when none of this shit was even speculated to be out and all of it matches the 1080ti with the 2070 super onwards beating it by 5%+? retard

a href="#p71689904" class="quotelink"
&gt;&gt;71689904
/a

br
2070 is getting discontinued so it doesn&#039;t actually exist anymore



a href="#p71690441" class="quotelink"
&gt;&gt;71690441
/a

br
RTX was already out, why would you ever buy previous nvidia gen?
Really want a 2070 Super under 200mm for a mini itx case.
br

br
How long does it take them to start making their own boards and custom coolers?

a href="#p71690511" class="quotelink"
&gt;&gt;71690511
/a

br
2060 was a worse pick back then
getting a 2070 super and will gave my radeon vii to my bro.
So 2060 or 2060 super?

a href="#p71690609" class="quotelink"
&gt;&gt;71690609
/a

br
2060 didnt come out until 2019 numbnuts

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;&gt;RTX 2070 Super = Radeon VII/1080ti
/span

br
It is much cheaper than Radeon VII. topkek

a href="#p71691009" class="quotelink"
&gt;&gt;71691009
/a

br

span class="quote"
&gt;falling for the 8gb is enough in 2019 meme
/span


a href="#p71691027" class="quotelink"
&gt;&gt;71691027
/a

br
then Navi is 100% DOA. 
br

br
dummy
What will the actual prices for super be? I dont trust the MSRP

a href="#p71691068" class="quotelink"
&gt;&gt;71691068
/a

br
2060 S = $399
br
2070 S = $499

a href="#p71691122" class="quotelink"
&gt;&gt;71691122
/a

br
Regular 2060 is going for 370€ minimum here in my EU shithole, i&#039;m gonna guess 450€ for 2060 super, we&#039;re gonna get super jewed

a href="#p71691221" class="quotelink"
&gt;&gt;71691221
/a

br
I am curious about your shithole. name? Poland?

a href="#p71691221" class="quotelink"
&gt;&gt;71691221
/a

br
These prices don&#039;t include VAT
br
Burgers don&#039;t actually pay 399 or 499 but a bit more.

a href="#p71691254" class="quotelink"
&gt;&gt;71691254
/a

br
Close, Portugal

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;bought a gtx680 when it was first released because it was a supposedly huge jump from Fermi fires of series 500-era
/span

br

span class="quote"
&gt;the Crysis of graphics cards for years to come
/span

br

span class="quote"
&gt;charts like these stopped showing it relatively soon after
/span

br

span class="quote"
&gt;finally get a gtx980ti because of a flash black Friday sale on amazon
/span

br

span class="quote"
&gt;thiswilllastmeforyearstocome.fgt
/span

br

span class="quote"
&gt;figured it&#039;d be a workhorse card for years to come, like the Crysis of graphics cards again
/span

br

span class="quote"
&gt;it&#039;s completely non-existent from all these carts
/span

br
Cant I just get the 2500k of graphics cards to see these comparison charts for once please?

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
Great, new gpu&#039;s. 
br

br
Wtf, those prices. Fuck it. Where are my mid-range gpus? 250 max! Were we spoiled in the past??
R

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;4K
/span

Rip navi
Rip prices


Damn bros, i thought id get btfo for buying a 2060 by this new 2060 super. Looks like only 2070 owners got btfo

a href="#p71689661" class="quotelink"
&gt;&gt;71689661
/a

br

span class="quote"
&gt;16GB VRAM card BTFO by 8GB
/span




a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
AMD are fucking done. The 2060 Super is as fast as the 5700 XT whilst being cheaper. The 2070 Super is way faster for the same money. Not to mention faster than Radeon VII too for significantly less.
br

br
Just pull out of the GPU market, AMD. It&#039;s getting embarrassing.

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

a href="#p71689758" class="quotelink"
&gt;&gt;71689758
/a

br
tfw i was right 
a href="/g/thread/71503975#p71509064" class="quotelink"
&gt;&gt;71509064
/a
 except for the 1080 part. Even down to the &quot;I don&#039;t know why 2070 exists.&quot; When should I start my youtube channel bros?

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;&#039;new&#039; 2060
/span

br

span class="quote"
&gt;15% price increase
/span

br

span class="quote"
&gt;17% performance increase
/span

br
???
T

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
2080 &gt;= RTX 2070 SUPER &gt;= 1080

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
would consider a 2070 SUPER if the price would&#039;ve been better.
br
399€ please
I

a href="#p71690300" class="quotelink"
&gt;&gt;71690300
/a

br
you mean when none of this shit was even speculated to be out and all of it matches the 1080ti with the 2070 super onwards beating it by 5%+? retard

a href="#p71689904" class="quotelink"
&gt;&gt;71689904
/a

br
2070 is getting discontinued so it doesn&#039;t actually exist anymore



a href="#p71690441" class="quotelink"
&gt;&gt;71690441
/a

br
RTX was already out, why would you ever buy previous nvidia gen?
Really want a 2070 Super under 200mm for a mini itx case.
br

br
How long does it take them to start making their own boards and custom coolers?

a href="#p71690511" class="quotelink"
&gt;&gt;71690511
/a

br
2060 was a worse pick back then
getting a 2070 super and will gave my radeon vii to my bro.
So 2060 or 2060 super?

a href="#p71690609" class="quotelink"
&gt;&gt;71690609
/a

br
2060 didnt come out until 2019 numbnuts

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;&gt;RTX 2070 Super = Radeon VII/1080ti
/span

br
It is much cheaper than Radeon VII. topkek

a href="#p71691009" class="quotelink"
&gt;&gt;71691009
/a

br

span class="quote"
&gt;falling for the 8gb is enough in 2019 meme
/span


a href="#p71691027" class="quotelink"
&gt;&gt;71691027
/a

br
then Navi is 100% DOA. 
br

br
dummy
What will the actual prices for super be? I dont trust the MSRP

a href="#p71691068" class="quotelink"
&gt;&gt;71691068
/a

br
2060 S = $399
br
2070 S = $499

a href="#p71691122" class="quotelink"
&gt;&gt;71691122
/a

br
Regular 2060 is going for 370€ minimum here in my EU shithole, i&#039;m gonna guess 450€ for 2060 super, we&#039;re gonna get super jewed

a href="#p71691221" class="quotelink"
&gt;&gt;71691221
/a

br
I am curious about your shithole. name? Poland?

a href="#p71691221" class="quotelink"
&gt;&gt;71691221
/a

br
These prices don&#039;t include VAT
br
Burgers don&#039;t actually pay 399 or 499 but a bit more.

a href="#p71691254" class="quotelink"
&gt;&gt;71691254
/a

br
Close, Portugal

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br

span class="quote"
&gt;bought a gtx680 when it was first released because it was a supposedly huge jump from Fermi fires of series 500-era
/span

br

span class="quote"
&gt;the Crysis of graphics cards for years to come
/span

br

span class="quote"
&gt;charts like these stopped showing it relatively soon after
/span

br

span class="quote"
&gt;finally get a gtx980ti because of a flash black Friday sale on amazon
/span

br

span class="quote"
&gt;thiswilllastmeforyearstocome.fgt
/span

br

span class="quote"
&gt;figured it&#039;d be a workhorse card for years to come, like the Crysis of graphics cards again
/span

br

span class="quote"
&gt;it&#039;s completely non-existent from all these carts
/span

br
Cant I just get the 2500k of graphics cards to see these comparison charts for once please?

a href="#p71689647" class="quotelink"
&gt;&gt;71689647
/a

br
Great, new gpu&#039;s. 
br

br
Wtf, those prices. Fuck it. Where are my mid-range gpus? 250 max! Were we spoiled in the past??
t
Held back e-Ink technology by artificially gimping the devices to conform to Amazon botnet

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
gf has one, seems okay.

a href="#p71681279" class="quotelink"
&gt;&gt;71681279
/a

br

span class="quote"
&gt;held back by e ink
/span

br
e ink is literally the entire appeal

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
Shitty locked down device. Get a Kobo.

a href="#p71681311" class="quotelink"
&gt;&gt;71681311
/a

br
bbbut that&#039;s not what i said

a href="#p71681311" class="quotelink"
&gt;&gt;71681311
/a

br
go back and read the comment you incorrectly quoted..
br
...sure is summer in here

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
If you want your books to be deleted when bezos think their a re not appropriate

a href="#p71681331" class="quotelink"
&gt;&gt;71681331
/a

br
is it locked down? I just transfer mobis using calibre and it works fine.
which one should i get if I just want to read animu

a href="#p71681304" class="quotelink"
&gt;&gt;71681304
/a

br

span class="quote"
&gt;gf
/span

br
HAHAHAHAHAHHAHAHAHHA FAGGOT HAHAHAHAHAHAHAHAHAHA
it was an attempt to get Amazon in more people&#039;s hands.

a href="#p71681413" class="quotelink"
&gt;&gt;71681413
/a

br
anything with a massive screen and decent dpi. Bonus points if it can run koreader.
I
I have one, it&#039;s really fucking great.
reading on it is great. software is lacking many useful features like marking a book as read. For some reason does not load cover images on some files. Actually does not load any in my case and i have about 1500 mobis loaded on it. There are no profiles as far as I know. Software comes in many language versions but not in mine of course - lets support some exotic eastern gibberish and completely ignore the fact that kindle is the most popular ebook reader in one of european countries.
br

br
also
br

a href="#p71681279" class="quotelink"
&gt;&gt;71681279
/a

br
fpbp
br
display makes it so fucking slooow, I mean hardware-wise it&#039;s ok, touch recognition is fine but the waiting for display refresh and drawing is making the whole experience meh and you cant be sure for a second if you tapped the right thing. Kindles with buttons were based,

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
if you format your mangas yourself it&#039;s totally usable, using one for berserk and it looks great

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
I want a kindle but don&#039;t want amazon botnet what do I buy?

a href="#p71681675" class="quotelink"
&gt;&gt;71681675
/a

br
Kobo

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
welcome, brother

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
Does anyone have experience with untranslated manga on an ereader? Runes look tiny on my phone, it&#039;s unpleasant.

a href="#p71681663" class="quotelink"
&gt;&gt;71681663
/a

br
Hardware buttons should be mandatory for these things.
br

br
There&#039;s so much wrong with modern ereaders and the general market right now. It feels like the phone market just before the ipod and iphone came out. Just waiting for someone to get enough things right that it finally sells like hotcakes and shows all the other manufacturers for the incompetent retards they really are.

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
protip: go to the menu in the upper right in Comic Screen and click &quot;Soft page button&quot; and turn the opacity for the plus/minus page buttons down to zero

a href="#p71681675" class="quotelink"
&gt;&gt;71681675
/a

br
disable wifi + calibre



a href="#p71682639" class="quotelink"
&gt;&gt;71682639
/a

br
do you need to disable wifi? I haven&#039;t done that since I got mine and my sideloaded books are fine

a href="#p71682285" class="quotelink"
&gt;&gt;71682285
/a

br
eh, my kobo is fine. id rather physical buttons, but for the money I spent on it and the amount of books I read, it was an easy decision



a href="#p71682815" class="quotelink"
&gt;&gt;71682815
/a

br
Bad, get a tablet

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
I see no reason to buy one. Either buy books or use a tablet.
Shit. If you read in the sun anyway instead of friends you are a friendless loser and it&#039;s suitable for you. If you have a higher than 30 IQ, you&#039;ll realize that it&#039;s only good for reading &quot;fun&quot; books and sucks for PDF and research or information books. 
br

br
A tablet is unironically the best, especially AMOLED for reading at night. If you read at your computer just turn your screen 90 degrees to read in 9:16, way better than 4:3 or 1:1.

a href="#p71682731" class="quotelink"
&gt;&gt;71682731
/a

br
No but I guess it removes the botnet potential.

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br

span class="quote"
&gt;no headphone jack
/span

br

span class="quote"
&gt;can&#039;t listen to audiobooks
/span


a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br

span class="quote"
&gt;That goblina in the reflection
/span

br
La creatura ..

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
Are there any good ereader for college textbooks?

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
I&#039;ve bought three as gifts. E ink is great. Pirate everything I ever want to read and plop it down on a lightweight device that doesn&#039;t need constant charging.
br
I use it all the time when I go on vacation
I

span class="quote"
&gt;book (paper) $4
/span

br

span class="quote"
&gt;book (kindle) $15
/span

br
JUST
Is it possible to use an ereader as a screen for a Raspberry Pi or similar?
br
I want to do plaintext wordprocessing innawoods and battery life is a consideration

a href="#p71682639" class="quotelink"
&gt;&gt;71682639
/a

br

span class="quote"
&gt;disable wifi
/span

br
Is this difficult to do on an ereader?

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
Why would you get a locked down Kindle when you could get a Kobo for less money, that isn&#039;t locked down nearly as much?

a href="#p71684364" class="quotelink"
&gt;&gt;71684364
/a

br
Based as fuck. I gotta the aura h2o with the warm light and it&#039;s totally worth it.

a href="#p71681673" class="quotelink"
&gt;&gt;71681673
/a

br
Care to share how your formatting pages? Page sizes, formats, fonts etc?

a href="#p71684572" class="quotelink"
&gt;&gt;71684572
/a

br
Not him but see Kindle Comic Converter


amoled white text on black. matte screen. e ink cant compete
tfw the books I&#039;m pirating have transcription errors and garbage text
br

br
why must the world be so cruel /g/

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
Waiting for other reflective display tech to come out. In colour and video. e-Ink sucks compared to the stuff coming soon

a href="#p71684669" class="quotelink"
&gt;&gt;71684669
/a

br
it can on the same day when the amoled goes back on its charger

a href="#p71684697" class="quotelink"
&gt;&gt;71684697
/a

br
yeah thats the downside (although back lightless amoled hmm) but its my phone, tablet and ebook reader and gets 2 days charge

a href="#p71681279" class="quotelink"
&gt;&gt;71681279
/a

br
E-Ink holds back itself. Color never.

a href="#p71684673" class="quotelink"
&gt;&gt;71684673
/a

br
Libgen has too many options for popular texts, its overwhelming. I have no idea how good any of them are until I read them.

a href="#p71684973" class="quotelink"
&gt;&gt;71684973
/a

br
Onyx has one but only for China&#039;s educational market, since the power would be abused by civilians

a href="#p71684275" class="quotelink"
&gt;&gt;71684275
/a

br
Yes, there are several ~13&quot; options.
Color and above 24Hz when

a href="#p71684391" class="quotelink"
&gt;&gt;71684391
/a

br

span class="quote"
&gt;buying an drm ebook from amazon ever
/span

br

span class="quote"
&gt;buying ebooks at all
/span

br
babys first time using the internet, eh?
I bought my parents a kindle and they shattered the screen. Like the top half worked but not the rest of the screen. I had to call Amazon to have it replaced, and then my parents broke the replacement. They broke the next one as well. 
br

br
That was the kindle with the keyboard, newer models have a touchscreen. Someone got the new kindle for my grandmother. It mainly uses gestures to turn pages and stuff. She was utterly confused by it, she thought the books I put on it were samples because after a few pages it would go back to the beginning. She couldn&#039;t read the whole book.

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
Unlike tablets, Kindle is glare-free

a href="#p71681451" class="quotelink"
&gt;&gt;71681451
/a

br
I tried it for a while, but the screen was shit. Unless you&#039;re planning to read your chinese cartoons outside all the time a good tablet is more interesting
What&#039;s a good shit cheap chink ebook reader?

a href="#p71686426" class="quotelink"
&gt;&gt;71686426
/a

br
Does the kindle not have an option to just make it so you can tap the left/right side of the screen to go back/further like kobo has?
br
Are your family members the kind of people who always have broken screens on their phone?

a href="#p71687322" class="quotelink"
&gt;&gt;71687322
/a

br

span class="quote"
&gt;I tried it for a while, but the screen was shit. Unless you&#039;re planning to read your chinese cartoons outside all the time a good tablet is more interesting
/span

br
I will read many more books than manga so e-ink is a must.

a href="#p71687377" class="quotelink"
&gt;&gt;71687377
/a

br
There aren&#039;t any
br
Kobo Clara HD on sale is the cheapest usable reader that isn&#039;t a kindle.

a href="#p71686426" class="quotelink"
&gt;&gt;71686426
/a

br
The touchscreen controls are whats stopping me from upgrading to a newer kindle. Nothing wrong with a simple button to change page

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
It&#039;s one of the best ereaders out there. It&#039;s 100% amazon botnet but this can be avoided if you never enable wifi, which I did. Why the fuck would I want wifi on an ereader, anyway? I download and transfer all my books using calibre, works good. It&#039;s also durable, I had a sony and a kobo before and both broke down on me. However, as any e ink reader it&#039;s painfully slow, I can&#039;t believe you have to wait for a second for a page to draw graphs or scroll PDFs  in 2019 when its cost is over 100$.
br

br
It does have some shit formatting presets when reading .epub or pdfs. 
br

br
all in all it&#039;s the best ereader I used, but until they fix the speed issues that plague all ereaders it will still be lacking.

a href="#p71681260" class="quotelink"
&gt;&gt;71681260
/a

br
I prefer laptop and libgen.

a href="#p71688312" class="quotelink"
&gt;&gt;71688312
/a

br

span class="quote"
&gt;I prefer laptop and libgen.
/span

br
You will have no eyesight at 40

a href="#p71688349" class="quotelink"
&gt;&gt;71688349
/a

br
How is small ass tablet any better for eyes.

a href="#p71688364" class="quotelink"
&gt;&gt;71688364
/a

br

span class="quote"
&gt;How is small ass tablet any better for eyes.
/span

br
Not a tablet, e-ink
br
It&#039;s like paper

a href="#p71681311" class="quotelink"
&gt;&gt;71681311
/a

br
reddón

a href="#p71688220" class="quotelink"
&gt;&gt;71688220
/a

br
Try some PocketBook devices, they have hardware buttons.

a href="#p71681413" class="quotelink"
&gt;&gt;71681413
/a

br
I got the Kindle Oasis 7&quot; for this.  I have only read what&#039;s on Kindle unlimited though (not much animu, mostly American stuff.)  The Amazon bought comics will zoom and read panel by panel so you can read everything.  I&#039;d say  7&quot; is the bare minimum but anything larger is very expensive.  I think one of the competitors is coming out with a 7&quot; for $200 soon if you don&#039;t want to support Amazon.
I have different e-readers with displays from 6&quot; to 8&quot;. The Kindle Oasis with 7&quot; is the most comfy one and by far my favorite.

a href="#p71687404" class="quotelink"
&gt;&gt;71687404
/a

br
Yeah, they are. I bought my mom a tablet that came with a stylus that inserts into the bottom right side of the device. She couldn&#039;t find the stylus. Somehow she
br
 shattered the screen. After a couple years she told me about how she had called tech support or whoever about the missing stylus and they were very unhelpful. I showed her how to take the stylus out. It was around Christmas so I bought her a new tablet and a protective leather case. 
br

br
Baby Boomer incompetence is incredible.

a href="#p71682691" class="quotelink"
&gt;&gt;71682691
/a

br
for $5 I&#039;d expect a couple GBs too





a href="#p71681675" class="quotelink"
&gt;&gt;71681675
/a

br
Kobo. I&#039;ve got one and I really like it

a href="#p71681413" class="quotelink"
&gt;&gt;71681413
/a

br
get one with a bigger screen. most of them come in 6&#039;&#039;. while you can read them fine most of the time it can get annoying to make out what the finer print says. also, you may need to install cbz support yourself since most of them don&#039;t come with support for those.

a href="#p71690603" class="quotelink"
&gt;&gt;71690603
/a

br

span class="quote"
&gt;How much?
/span

br

span class="quote"
&gt;&gt;BASED MURATA
/span

br
It was 195 shipped from Spain on AliExpress
br
Official store
br

br
But it was a sale, should be 220 average

a href="#p71691435" class="quotelink"
&gt;&gt;71691435
/a

br
Man, the prospect tempts, but my blood isn&#039;t made for that.
What&#039;s a good e-reader that respect my privacy? I got a kindle a while ago expecting to de-amazon it but it&#039;s a model that can&#039;t be downgraded or anything.
br
What do you anons recommend?
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

Show us your fizzbuzz!
br

pre class="prettyprint"
r=(a,b)=&gt;(a&gt;=b)?[]:[a,...r(++a,b)]
br
// Returns an array of numbers from a to --b
br
b=(n,f)=&gt;!(n%f)
br
// Returns true if n % f is 0, otherwise false
br
fb=n=&gt;console.log(`${n} `+(b(n,3)?&quot;Fizz&quot;:&quot;&quot;)+(b(n,5)?&quot;Buzz&quot;
wbr
:&quot;&quot;))
br
/*
br
 * Logs a string starting with n
br
 * followed by &quot;Fizz&quot; if divisible by 3
br
 * and &quot;Buzz&quot; if divisible by 5
br
*/
br
r(0,101).forEach(fb)
br
// Makes an array of numbers from 0 to 100 and runs fb on each number
br

/pre

Why did you post such an erotic image?

a href="#p71708653" class="quotelink"
&gt;&gt;71708653
/a

br
to fizz your buzz

a href="#p71708653" class="quotelink"
&gt;&gt;71708653
/a

br
anon, it&#039;s a trap

pre class="prettyprint"
&lt;ul&gt;
br
&lt;li&gt;1&lt;/li&gt;
br
&lt;li&gt;2&lt;/li&gt;
br
&lt;li&gt;3&lt;/li&gt;
br
&lt;li&gt;4&lt;/li&gt;
br
&lt;li&gt;5&lt;/li&gt;
br
&lt;li&gt;6&lt;/li&gt;
br
...
br
&lt;/ul&gt;
br

br
&lt;style&gt;
br

br
li:nth-child(3n), li:nth-child(5n){
br

br
  font-size:0px;
br

br
}
br

br
 
br

br
li:nth-child(3n):before{
br

br
  font-size:1em;
br

br
  content:&quot;Fizz&quot;;
br

br
}
br

br
li:nth-child(5n):after{
br

br
  font-size:16em;
br

br
  content:&quot;Buzz&quot;;
br

br
}
br
&lt;/style&gt;
br

/pre


a href="#p71708653" class="quotelink"
&gt;&gt;71708653
/a

br
i only have traps on my pc

a href="#p71708692" class="quotelink"
&gt;&gt;71708692
/a

br
is this the css fizzbuzz?
br
that ux lady who got fizzbuzzed should do this lol
br

a href="#p71708707" class="quotelink"
&gt;&gt;71708707
/a

br
dump them here

pre class="prettyprint"
#include &lt;stdio.h&gt;
br

br
int main()
br
{
br
        unsigned int magic = 0x2F34F1CFu;
br

br
        char const str[3][9] =
br
        {
br
                { 0x46, 0x69, 0x7A, 0x7A },
br
                { 0x42, 0x75, 0x7A, 0x7A },
br
                { 0x46, 0x69, 0x7A, 0x7A, 0x42, 0x75, 0x7A, 0x7A }
br
        };
br

br
        for (int k = 1; k &lt;= 100; ++k)
br
        {
br
                unsigned int const num = magic &amp; 3u;
br
                if (num != 3u)
br
                {
br
                        printf(&quot;%s\n&quot;, str[num]);
br
                }
br
                else
br
                {
br
                        printf(&quot;%d\n&quot;, k);
br
                }
br
                magic = (magic &gt;&gt; 2) | (num &lt;&lt; 28);
br
        }
br

br
        return 0;
br
}
br

/pre


a href="#p71708742" class="quotelink"
&gt;&gt;71708742
/a

br

br
I&#039;m afraid it is CSS fizzbuzz.

a href="#p71708742" class="quotelink"
&gt;&gt;71708742
/a


pre class="prettyprint"
for(i = 1; i &lt;= 100; i++){
br
 let FizzBuzz = &#039;&#039;;
br
     if(i % 3 == 0)
br
        FizzBuzz += &quot;Fizz&quot;;
br
      if(i % 5 == 0)
br
        FizzBuzz += &quot;Buzz&quot;
br
console.log(FizzBuzz || i)
br
}
br
[code/]
br

br
Simple as that.
/pre

Some anons liked mine I posted the other day

a href="#p71708797" class="quotelink"
&gt;&gt;71708797
/a

br

span class="quote"
&gt;[code/]
/span

br
Well that&#039;s knackered that post, hasn&#039;t it?

pre class="prettyprint"
### Operators
br
eq = $(filter $1,$2)
br
slice = $(wordlist 2,$(words $1),$1)
br
repl = $(if $(call eq,$(words $4),$1),$3,$(call repl,$1,$2,$3 $2,$(words $4) $4))
br
map = $(if $2,$(call map,$1,$(call slice,$2),$3,$4 $(call $1,$(firstword $2),$3,$4)),$4)
br
rotate = $(call slice,$1) $(firstword $1)
br
zip3 = $(if $2,$(call zip3,$1,$(call slice,$2),$(call rotate,$3),$(call rotate,$4),$5 $(call $1,$(firstword $2),$(firstword $3),$(firstword $4))),$5)
br
inc = $(words $(call repl,$1,_) _)
br
 
br
### Program body
br
count = $(words $3)
br
cycle = $(call slice,$(call repl,$1,_)) $2
br
 
br
fizz := $(call cycle,3,fizz)
br
buzz := $(call cycle,5,buzz)
br
numbers := $(call map,inc,$(call map,count,$(call repl,100,_)))
br
 
br
select = $(if $1,$1,$2)
br
fizzbuzz = $(call select,$(if $(call eq,$2,_),,$2)$(if $(call eq,$3,_),,$3),$1)
br
 
br
result := $(call zip3,fizzbuzz,$(numbers),$(fizz),$(
wbr
buzz))
br
println = $(info $1)
br
 
br
### Targets
br
.PHONY: all
br
all: ; $(call map,println,$(result))
br

/pre


a href="#p71708822" class="quotelink"
&gt;&gt;71708822
/a

br
ah, it&#039;s the kek magic fizzbuzz.
br
i learned some magic a few days ago.

a href="#p71708797" class="quotelink"
&gt;&gt;71708797
/a

br
op&#039;s fizzbuzz is es6

a href="#p71708859" class="quotelink"
&gt;&gt;71708859
/a

br
Yeah but OP is pretending it needs to be syntactically fancier than my solution.

pre class="prettyprint"
def fizzbuzz(limit):
br
    for value in range(1, limit + 1):
br
        line_out = &#039;&#039;
br
        if is_divisible_by_3(value):
br
            line_out += &#039;fizz&#039;
br
        if is_divisible_by_5(value):
br
            line_out += &#039;buzz&#039;
br
        if not line_out:
br
            line_out = value
br
        print(line_out)
br

br

br
def is_divisible_by_3(value):
br
    while len(str(value)) &gt; 1:
br
        value = sum(int(c) for c in str(value))
br
    return value in {3, 6, 9}
br

br

br
def is_divisible_by_5(value):
br
    return int(str(value)[-1]) in {0, 5}
br

br

br
if __name__ == &#039;__main__&#039;:
br
    fizzbuzz(limit=100)
br

/pre


a href="#p71708822" class="quotelink"
&gt;&gt;71708822
/a

br

span class="quote"
&gt;having fizzbuzz as a separate string
/span

br

span class="quote"
&gt;Counting to 101
/span

br
Gonna have to smash that dislike button, anon.

pre class="prettyprint"
(defun FizzBuzz2()
br
    (dotimes (n 101)
br
      (if (= (mod n 3) 0) (write &quot;Fizz&quot;))
br
      (if (= (mod n 5) 0) (write &quot;Buzz&quot;))
br
      (if (and (not (= (mod n 3) 0)) (not (= (mod n 5) 0))) (format t &quot;~a&quot; n))
br
      (write-line &quot;&quot;)))
br
[\code]
/pre


a href="#p71708640" class="quotelink"
&gt;&gt;71708640
/a

br
Here&#039;s a quick and simple C version because why not.
br
Honestly I&#039;d prefer to have some empty string and then concatenate Fizz and Buzz to it respectively if it&#039;s divisible by 3 and 5, then just print the number if the string&#039;s empty.
br

br

pre class="prettyprint"
#include&lt;stdio.h&gt;
br

br
int main(){
br
    //For all numbers 1-100 print fizzbuzz:
br
    for(int i = 1; i &lt; 101; i++){
br
        if((i%3==0) &amp;&amp; (i%5==0)){
br
            print(&quot;FizzBuzz&quot;);
br
        }
br
        else if(i%3==0){
br
            print(&quot;Fizz&quot;);
br
        }
br
        else if(i%5 ==0){
br
            print(&quot;Buzz&quot;);
br
        }
br
        else{
br
            print(&quot;%d&quot;, i);
br
        }
br
    }
br
    
br
    
br
    return 0;
br
}
br

/pre


span class="quote"
&gt;Hey anons! Post the most convoluted, unmaintainable and over engineered FizzBuzz solutions xD
/span

br

span class="quote"
&gt;This is supposed to be a challenge to prove what a good programmer you are
/span

br
Yeah, that&#039;s what being a good programmer is about isn&#039;t it?

a href="#p71708936" class="quotelink"
&gt;&gt;71708936
/a

br

span class="quote"
&gt;Counting to 101
/span

br
Yikes, why comment on things you&#039;re so ignorant about?

a href="#p71708975" class="quotelink"
&gt;&gt;71708975
/a

br

span class="quote"
&gt;range(1, 101)
/span


a href="#p71708973" class="quotelink"
&gt;&gt;71708973
/a

br
bruh at least my solution is modular

a href="#p71708997" class="quotelink"
&gt;&gt;71708997
/a

br

span class="quote"
&gt;[1, 101)
/span


a href="#p71709006" class="quotelink"
&gt;&gt;71709006
/a

br
The exercise is to count up to 100, if your code involves &quot;101&quot; to reach 100 then it&#039;s immediately less readable.

a href="#p71709022" class="quotelink"
&gt;&gt;71709022
/a

br

span class="quote"
&gt;I&#039;m completely ignorant of how the range() built-in works so it&#039;s unreadable
/span

br
lmao fucking pajeets are too funny

a href="#p71709003" class="quotelink"
&gt;&gt;71709003
/a

br
So? It&#039;s not hard to encapsulate each step of a FizzBuzz to make it modular anyway.

pre class="prettyprint"
print(&#039; &#039;.join([&#039;fizz&#039;*(i%3==0) + &#039;buzz&#039;*(i%5==0) or str(i) for i in range (1, 101)]))
/pre


a href="#p71709042" class="quotelink"
&gt;&gt;71709042
/a

br
Look, if the exercise requires you to count to 100 and you&#039;ve used something that only equates to an &quot;&lt; 101&quot; operator, then it was a poor choice.
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

Miss him yet?
I&#039;m not glad he&#039;s dead, but I&#039;m glad he&#039;s gone.

span class="quote"
&gt;Steve Jobs: I want the most successful tech company of all time
/span

br

span class="quote"
&gt;Satan: OK, but I take it over after you&#039;re dead
/span

br

span class="quote"
&gt;Steve Jobs: Deal
/span



a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br
no, he was an asshole

a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br
jobs was a brain dead retard

a href="#p71707943" class="quotelink"
&gt;&gt;71707943
/a

br
BASED

a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br
Apple was also complete shit when it was lead by Steve Jobs. You just got a nostalgia boner because your first tech device you ever used was your mom&#039;s iPhone you useless zoomer and you&#039;re too young to remember that gay shit like no SD card and no removable battery is mostly Jobs&#039; fucking fault.

a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br
fuck jobs, only retards idolize that stupid piece of shit

a href="#p71708049" class="quotelink"
&gt;&gt;71708049
/a

br
I&#039;m just as retarded. My Xeon E5-2690 is in a fanless case and idles at 50C.

a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br

span class="quote"
&gt;&#039;based MacBooks&#039;
/span

br
Sanjiv, please

a href="#p71707848" class="quotelink"
&gt;&gt;71707848
/a

br
Jobs was like the Lich King. He ruled over the swarms of mindless zombies, and with no leader, they run wild and unchecked.

a href="#p71707943" class="quotelink"
&gt;&gt;71707943
/a

br
based
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

Old thread: 
a href="/g/thread/71698424#p71698424" class="quotelink"
&gt;&gt;71698424
/a

br

br
What are you working on, /g/?
First for C++ is the only language you need

a href="#p71705326" class="quotelink"
&gt;&gt;71705326
/a

br
*Assembly, you stupid nigger.

a href="#p71705305" class="quotelink"
&gt;&gt;71705305
/a

br
literally nothing
br
im balls deep in powertracing issues at work and i have no energy when i come home anymore

a href="#p71705347" class="quotelink"
&gt;&gt;71705347
/a

br

span class="quote"
&gt;learn x86 assembly
/span

br

span class="quote"
&gt;stuck on desert island with raspberry pi
/span

br

span class="quote"
&gt;can&#039;t do anything 
/span

br
Yeah I don&#039;t think so buddy
What&#039;s the equivalent of win forms in java? 
br
Some GUI you just drag and drop and it just werks. 
br
I have to make some small assignemnt doesn&#039;t have to be pretty or new epic stuff should just werk.

a href="/g/thread/71698424#p71705236" class="quotelink"
&gt;&gt;71705236
/a

br

span class="quote"
&gt;the contempt business people have for devs
/span

br

br
story time??

a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a

br
I was introduced to JavaFX or swing. I don&#039;t recall which. There was a new thing coming out which we didn&#039;t learn. But that was many years ago.
br
Search for Java window builder and see what that is.
Exceptions are vastly superior to C/Rust/Go-style error handling
i can&#039;t stop procrastinating asjdhahfgggasliuglajskd

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
lumping c, rust and go together like they&#039;re the same just demonstrates you&#039;re a retard

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Deoptimising.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Correct and also one of the many reasons C++ is the best language

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Yeah lemme just unwind stack at any tiny problem. Try catch is only good to make a program shut up, not your for reliability

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
this, thanks to exceptions I never have to use those bloated if/else
Some anon was asking for the updated one

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
No, Haskell&#039;s Either-likes is the only sane way to work with computations that can fail. Exceptions are yet another, invisible and requiring special syntax and runtime support to handle way to return value from a function.
br
Exceptions are 100% retarded invention.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br

span class="quote"
&gt; Haskell&#039;s Either-likes
/span

br
you mean monad transformers

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
You don&#039;t need that meme shit, just a type that can represent a value or an error

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
monad transformers are a rather complicated notion but also become necessary to subsume exceptins

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
They&#039;re enabling global error.
br
But they&#039;re not very good in the small. So many complications are introduced by having a second control flow path.

a href="#p71705909" class="quotelink"
&gt;&gt;71705909
/a

br

span class="quote"
&gt;monad transformers are a rather complicated notion
/span

br
Huh? It&#039;s literally just a nicer way of dealing with monads inside monads.

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
This 
a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a


a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
t. seething cnile

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br
you and I know that, pajeet doesn&#039;t
br

br

a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
by the time you&#039;ve implemented decent functions to manipulate error types you have a monad

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br

a href="#p71706051" class="quotelink"
&gt;&gt;71706051
/a

br
t. CS freshman

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
They are not mutually exclusive, a good API will provide both depending on the situation (e.g. file opening).

a href="#p71706122" class="quotelink"
&gt;&gt;71706122
/a

br
muh Enterprise grade 200loc Error sum type

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br
Sometimes (actually quite a lot of times) I want to turn Either&lt;L1, R1&gt; into Either&lt;L2, R1&gt; to enrich the error data. Quite often I want to have E&lt;L1, R1&gt; -&gt; E&lt;L2, R2&gt; to do both.
br
Monad transformers will not help here.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
I&#039;ve heard people say that in C++ exceptions are cheaper than error codes because they&#039;re free when they don&#039;t trigger or something.
br
To me that doesn&#039;t make sense. Whatever mechanism that implements exceptions couldn&#039;t also implement error codes?

a href="#p71706131" class="quotelink"
&gt;&gt;71706131
/a

br
You are correct, they are not mutually exclusive. Exceptions are ok for things like division by zero (because it will be night fucking mare otherwise to do arithmetic)

a href="#p71706173" class="quotelink"
&gt;&gt;71706173
/a

br
uhhhh
Hey, Anone~ Will you learn JavaScript with me? Pretty please?

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
when you return from a function that returns an error code you must compare and branch 
br
with you return from a function that throws an exception you just keep going
br
when an exception is thrown however you get fucked up runtime callstack introspection which is slow as balls however

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
It makes sense if you have 1 fail for 100000 non-fail situations. The stack-unwinding cost will be just amortized.
br
My problem with exception is the cost of programmers understanding the control flow. Java did the right thing demanding exceptions being part of function&#039;s signature. But pajeets were to stupid to understand and properly use and instead did the needful.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
So like std::expected?

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
Go suck a nigger dick or something, sweetie. White men are talking.
Help me bros
br
I am trying to turn Python-driven data analytics into a hobby outside of work, but I have learned that looking for nails (projects) to hit with a hammer (programming) is not the right way to think about programming.
br
What the hell do I do?

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
Don&#039;t know, did not read about it yet, sorry.

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
yeah but not retarded

a href="#p71706147" class="quotelink"
&gt;&gt;71706147
/a

br
monad transformers allow you to make a stack of different ways of handling errors in different parts of you system, they even let you have some kind of priority in them (you don&#039;t really care about the previous formatting error if you&#039;re out of memory)
br
what you&#039;re talking about is completely irrelevant, if your favourite language doesn&#039;t have a bifunctor class/trait you might as well kys.

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
what are you working on, jsposter?

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
Data analytics sounds like a fucking boring hobby, maybe that&#039;s your issue

a href="#p71706240" class="quotelink"
&gt;&gt;71706240
/a

br
Good, I wouldn&#039;t want to use Hasklel either. Too many brainlets smelling the thing up.

a href="#p71706267" class="quotelink"
&gt;&gt;71706267
/a

br
Brainlet. It&#039;s literally the future of our society

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br

span class="quote"
&gt;this is what Haskellers actually believe
/span

br
II love the language but it has its place

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br
Yeah at actual companies, not for fucking hobbyist retards

a href="#p71706326" class="quotelink"
&gt;&gt;71706326
/a

br
A hobby that doubles as a career is literally the most fulfilling thing you can do

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
a dream we will never achieve

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
That&#039;s too cumbersome. You need a syntax/symanic help from the language here for practical usage.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Forcing yourself to enjoy your career as a hobby isn&#039;t the same thing as making money off your hobby though.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Truth
br

br
I get disappointed when it&#039;s time to call it quits I enjoy my work so much.
br

br
Currently working for a big car company working on an electric self driving car to compete with tesla.
br

br
Doing full stack dev with C, C++, Mqtt, React, Redux, Python. 
br

br
God I hate the people I work with but love the project.

a href="#p71706396" class="quotelink"
&gt;&gt;71706396
/a

br
I just feel disappointed when work is over because no gf to go home to
br
Programming is a great job but I get my fill at work and I have other hobbies I&#039;d rather do at home
br
But writing important software at work makes me feel less inclined to do it in my free time as well
Where my /programing as a hobby/ bros at?
br
I need emotional support.

a href="#p71706193" class="quotelink"
&gt;&gt;71706193
/a

br

span class="quote"
&gt;when you return from a function that returns an error code you must compare and branch
/span

br
Yes I accept that in the case where the function is invisible to the compiler there can be complications like double checking.
br
But in other cases I don&#039;t really see it. Because any error will stem from some sort of error evaluation like:
br

pre class="prettyprint"
if(a==5) return -1; //oops, a can&#039;t be 5 here
br

/pre

br
Outside the function we define our error handling with an if that does a redundant check. For the compiler to eliminate the two it needs to know the function code. But if it does it already knows which branch we should go down and it can simply go there. Instead of returning to the location where we made the call to the function that returns an error code we could jump straight into the block catching the error. The compiler might have to reorder some things in some cases but I&#039;d deem the normal case as being trivial.
br

br
So in the non-error case (as determined inside the function) you just return and keep going as you say. It doesn&#039;t seem like anything that&#039;s inherent to exceptions or error codes. If I were to guess it&#039;s just the exceptions being assumed to be costly. That assumption is a lot harder when you&#039;re dealing with error code because they&#039;re really just ints. But the compiler do this if you just place an unlikely attribute around the error branch?

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
I agree. The &#039;invisible control flow&#039; argument is for retards that can&#039;t into exception safety.

a href="#p71706490" class="quotelink"
&gt;&gt;71706490
/a

br

span class="quote"
&gt;For the compiler to eliminate the two it needs to know the function code.
/span

br
One of the two.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
never gonna make  it.

a href="#p71706524" class="quotelink"
&gt;&gt;71706524
/a

br
Bullies should go neck themselves desu.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
All the people jerking over monads and exceptions are hobbyists
Is it just me who looks at this and says 
br

span class="quote"
&gt;Wow so elegant. I can&#039;t believe I used to do anything without writing a new class at every step
/span

br
And then you just rest blissfully knowing you need to consider partial state at every turn because you compile with exceptions enabled.
br

br
More seriously. This is a blatant overuse of global error handling. Exceptions and its devotees encourage that.
Small sql question, is the arrangement for checks important? 
br
Like 
br
Select * 
br
From person p, customer c
br
Where p.id = c.id
br
And something something.

a href="#p71706614" class="quotelink"
&gt;&gt;71706614
/a

br
Sorry buddy but i haven no idea what monad is.
Guys, I hate my career. Did any of you get into programming later in life?

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
Not a problem with smart pointers but yeah exceptions are shit but C++ isn&#039;t &quot;elegant&quot; to begin with

a href="#p71706377" class="quotelink"
&gt;&gt;71706377
/a

br
yes, it&#039;s called do notation

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
My advice is to brainstorm business ideas and see your hobby as a potential source of income.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
I program at home and at work. Does that count?

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
I see. OOM is every relevant error for Haskell.

a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a

br
I&#039;m living it.

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
I started young but I know it&#039;s possible to get into it later. Back in the day, a lot of old engineers suddenly had to learn programming just to keep their jobs.

a href="#p71706684" class="quotelink"
&gt;&gt;71706684
/a

br
That is just syntax help, you mong.

a href="#p71706692" class="quotelink"
&gt;&gt;71706692
/a

br
I do the same but my profession is not related to computers.
br
im medfag by trade

a href="#p71706703" class="quotelink"
&gt;&gt;71706703
/a

br
based

a href="#p71706728" class="quotelink"
&gt;&gt;71706728
/a

br
that&#039;s literally what you asked for, retard

a href="#p71706646" class="quotelink"
&gt;&gt;71706646
/a

br
1) No
br
2) Use joins

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
Got my first programming job at 27. Was programming as a hobby for 4 years by then.

a href="#p71706780" class="quotelink"
&gt;&gt;71706780
/a

br
1) what I wanted to say was is a=b the same as b=a? In terms of equals 
br
2) doesn‘t it join automatically? (Just learning it and using some tasks from prof)

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br

a href="#p71706680" class="quotelink"
&gt;&gt;71706680
/a

br
it&#039;s a fucking tutorial, of course you&#039;re going to ask &quot;why would I do this in production code&quot;

a href="#p71706809" class="quotelink"
&gt;&gt;71706809
/a

br
1) Yes, same thing.
br
2) The query optimiser might convert that to joins, but you should not rely on it and write using joins yourself.
this is going to sound retarded but I want to start some sort of foss product, i just dont know what to do.  Are there any recommended sites for &quot;shit we need but no ones done it yet&quot;?

a href="#p71706755" class="quotelink"
&gt;&gt;71706755
/a

br
Remove nigger sperm from your cucky eyes, and read this again: 
a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a
 past &quot;syntax&quot; word.

a href="#p71706832" class="quotelink"
&gt;&gt;71706832
/a

br
https://en.wikibooks.org/wiki/C%2B%
wbr
2B_Programming/Exception_Handling
br

span class="quote"
&gt;Writing exception safe code
/span

br
It&#039;s about practice. Not explaining how exceptions work.
br
That nuance clearly wasn&#039;t in my post though.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You&#039;re a bit late. This whole programming thing is almost over. It&#039;s hard to document what&#039;s left to do when there&#039;s so little.

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
You don&#039;t need to declare a class for every delete, that&#039;s what unique_ptr is for.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
Composer for Blender.
br
Literally the only thing it needs.
br
Look at Nuke does and copy it to blender,you will probably be named FOSS hero.

a href="#p71706881" class="quotelink"
&gt;&gt;71706881
/a

br
yeah I know.  Im just bored at home.  I guess I could contribute to some apache stuff in my free time

a href="#p71706887" class="quotelink"
&gt;&gt;71706887
/a

br

span class="quote"
&gt;Literally the only thing it needs.
/span

br
Have you ever used other 3D software? Blender has gotten pretty good (especially for being free), but it&#039;s still lacking in a lot of areas.

a href="#p71706895" class="quotelink"
&gt;&gt;71706895
/a

br
If you already have a job, please don&#039;t.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You could go ask people other than programmers. I&#039;m sure there&#039;s a lot of people who don&#039;t have access to what they want because they&#039;re only comfortable with GUI.

a href="#p71706871" class="quotelink"
&gt;&gt;71706871
/a

br
makes more sense
br
still, using allocating/freeing heap memory as an example in a &quot;best practices&quot; section is dumb because best practice is use the standard library type for that

a href="#p71706943" class="quotelink"
&gt;&gt;71706943
/a

br
I believe that blender has the potential to be the best 3d software paid or not.
br
Its not lacking much honestly.
.

a href="#p71706866" class="quotelink"
&gt;&gt;71706866
/a

br
you quoted the wrong post but thanks for the (you) anon

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Restarts are vastly superior to exceptions

a href="#p71707083" class="quotelink"
&gt;&gt;71707083
/a

br
hehe anal

span class="quote"
&gt;GC language users: you don&#039;t have to manually free memory! So convenient! 
/span

br

span class="quote"
&gt;.Dispose(): I&#039;m about to end this man&#039;s whole career
/span

br
What&#039;s the point of GC if you have to do essentially the same shit for some objects.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Just don&#039;t input wrong data LMAO.
Programming is hard or I am just a brainlet... :(
br

br
I spent hours understand what is going on here

a href="#p71707203" class="quotelink"
&gt;&gt;71707203
/a

br
Dispose() isn&#039;t really about freeing memory, but ok

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Please printscreen, anon, I can&#039;t read this shit

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;taking a picture of your screen
/span


a href="#p71707203" class="quotelink"
&gt;&gt;71707203
/a

br
You basically said it yourself already, you only have to do it for some very large objects and you don&#039;t have to be nearly as cautious about it

a href="#p71707227" class="quotelink"
&gt;&gt;71707227
/a

br
It&#039;s not about memory but you have to manage those objects exactly the same way you have to free memory.

a href="#p71707257" class="quotelink"
&gt;&gt;71707257
/a

br
And garbage collectors manage memory

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Looks like somebody is btfo.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;Shot on Mi 9 SE AI triple camera
/span


a href="#p71706984" class="quotelink"
&gt;&gt;71706984
/a

br
Does it have the potential? Sure, it made huge strides in the last decade going from GIMP level to software that is actually on generally equal footing with others.
br
And while it is a very good overall package, but for specific areas I&#039;d still rather pick something like ZBrush, Substance Designer/Painter, Houdini, literally anything else for UVs, etc. The only edge in those areas Blender has is the very tight integration between its components, but that often doesn&#039;t make up for how much Blender lacks. 
br
Frankly, the biggest reason that Blender has gotten so good is that Autodesk has been totally slacking off for years. If they/some other company get their shit together, it could change again.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Be more specific

a href="#p71707265" class="quotelink"
&gt;&gt;71707265
/a

br
And I&#039;m saying that it isn&#039;t much of an improvement and I can&#039;t even wrap this dispose crap with RAII.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
The fact that you took a photo of your screen confirms that you are, in fact, a brainlet. I&#039;m sorry anon

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;&quot;Programming&quot;
/span

br

span class="quote"
&gt;Posts a screenshot of not-C++
/span

GC users are retards who forget that memory isn&#039;t the only resource that needs to be managed.

a href="#p71707289" class="quotelink"
&gt;&gt;71707289
/a

br

span class="quote"
&gt;resource A has to be managed 95% of the time
/span

br

span class="quote"
&gt;there&#039;s an infinite amount of other resources but you have to manage them relatively rarely
/span

br

span class="quote"
&gt;automate management of resource A
/span

br

span class="quote"
&gt;still have to manage all the other possible resources
/span

br

span class="quote"
&gt;this isn&#039;t an improvement
/span


a href="#p71707316" class="quotelink"
&gt;&gt;71707316
/a

br
GC was invented by someone much smarter than you&#039;ll ever be, brainlet.

a href="#p71707289" class="quotelink"
&gt;&gt;71707289
/a

br
C#, Java etc allow you to wrap them in stuff like try-with-resources, learn your languages.

a href="#p71707307" class="quotelink"
&gt;&gt;71707307
/a

br

span class="quote"
&gt;&gt;&quot;&quot;
/span


a href="#p71707333" class="quotelink"
&gt;&gt;71707333
/a

br
If he&#039;s so smart then why didn&#039;t he generalize GC to manage more than just memory?
br
hmmmmm
Something that scrapes Anilist for the airing shows in a given season and spits out an RSS and Download Rules to media/anime/airing/season.year/show
wbr
/ file to append to the end of your QBittorrent rules file.

a href="#p71707351" class="quotelink"
&gt;&gt;71707351
/a

br
Yes. In C++ multi character strings are enclosed with &quot;. Don&#039;t be a nigger.

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
because lisp can handle the rest

a href="#p71707370" class="quotelink"
&gt;&gt;71707370
/a

br
anon was complimenting your greentext skills

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
You got a shitpost to your shitpost, and you&#039;re still the retard. Lisp pioneered gc among a bazillion other shit, now go figure it the fuck out on your own.

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
he did, ur language is just too shit.

a href="#p71707411" class="quotelink"
&gt;&gt;71707411
/a

br

span class="quote"
&gt;my language
/span

br
I only use programming languages, so obviously I don&#039;t have to deal with GCs.

a href="#p71707424" class="quotelink"
&gt;&gt;71707424
/a

br
figures why you still haven&#039;t collected yourself

a href="#p71707370" class="quotelink"
&gt;&gt;71707370
/a

br
this 
a href="#p71707382" class="quotelink"
&gt;&gt;71707382
/a

br
for liberal definitions of complimenting

a href="#p71707446" class="quotelink"
&gt;&gt;71707446
/a

br
Are you complaining about the combination of different quoting methods? I don&#039;t think there&#039;s any problem with it.

a href="#p71706482" class="quotelink"
&gt;&gt;71706482
/a

br
This. I want to do it in my free time, but the thought of doing unpaid labor physically pains me.

a href="#p71707347" class="quotelink"
&gt;&gt;71707347
/a

br
C# has using but it&#039;s not automatic, you have to wrap every instance of a class.

a href="#p71707547" class="quotelink"
&gt;&gt;71707547
/a

br
Good point.
Is there a comfy and &quot;safe&quot; career path to go after with a CS degree?
br
Something that if future proof and if you are able to learn it you will do it with ease and never fail.

a href="#p71707562" class="quotelink"
&gt;&gt;71707562
/a

br
No, because your less comfy peers will automate your work away.

a href="#p71707197" class="quotelink"
&gt;&gt;71707197
/a

raii is completely redundant if you have generics and ideally C++ style references

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br
You are wrong and have no idea what you&#039;re talking about.

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br
Raii is to ensure resources are freed even when there&#039;s an unhandled exception.

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br

span class="quote"
&gt;C++ style references
/span

br
So, RAII?

a href="#p71707657" class="quotelink"
&gt;&gt;71707657
/a

br

pre class="prettyprint"
template &lt;typename T, typename F&gt;
br
void scoped(F &amp;fn)
br
{
br
    T obj; // presume POD
br
    init(&amp;obj);
br
    f(obj); // presume takes an argument of T&amp;
br
    close(&amp;obj);
br
}
/pre

br
passing arguments to init, returning values from f and handling exceptions is left as an exercise for the reader

a href="#p71707347" class="quotelink"
&gt;&gt;71707347
/a

br

a href="#p71707547" class="quotelink"
&gt;&gt;71707547
/a

br
Java has Lombok that provides an annotation for easy management, C# 8.0 has using declarations that do the same thing.
br
Sure, it&#039;s not automatic but it&#039;s not as painful as having to start logic at column 120 because you have a few nested using/try-with-resources blocks.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
I&#039;m sure dynamic allocation is left as a reader exercise, too.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br

span class="quote"
&gt;presume POD
/span

br
It&#039;s shit.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
init is your ctor and close is your dtor. that&#039;s where your dynamic allocation takes place.

a href="#p71707562" class="quotelink"
&gt;&gt;71707562
/a

br
Mananger, a lot CS just get decent money,Networking and experience and move up to non-IT jobs, just autist get code monkey path.

a href="#p71707749" class="quotelink"
&gt;&gt;71707749
/a

br

span class="quote"
&gt;missing the point
/span

br
all that comment intends to convey is that there won&#039;t be a ctor and dtor implicitly generated
br

br

a href="#p71707754" class="quotelink"
&gt;&gt;71707754
/a
 for 
a href="#p71707746" class="quotelink"
&gt;&gt;71707746
/a


a href="#p71707754" class="quotelink"
&gt;&gt;71707754
/a

br

a href="#p71707771" class="quotelink"
&gt;&gt;71707771
/a

br
Okay, so why write all that boilerplate when you can have the language handle it for you?
Recommend me some quick resource to learn git and github

a href="#p71707829" class="quotelink"
&gt;&gt;71707829
/a

br
man git

a href="#p71706211" class="quotelink"
&gt;&gt;71706211
/a
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

Old thread: 
a href="/g/thread/71698424#p71698424" class="quotelink"
&gt;&gt;71698424
/a

br

br
What are you working on, /g/?
First for C++ is the only language you need

a href="#p71705326" class="quotelink"
&gt;&gt;71705326
/a

br
*Assembly, you stupid nigger.

a href="#p71705305" class="quotelink"
&gt;&gt;71705305
/a

br
literally nothing
br
im balls deep in powertracing issues at work and i have no energy when i come home anymore

a href="#p71705347" class="quotelink"
&gt;&gt;71705347
/a

br

span class="quote"
&gt;learn x86 assembly
/span

br

span class="quote"
&gt;stuck on desert island with raspberry pi
/span

br

span class="quote"
&gt;can&#039;t do anything 
/span

br
Yeah I don&#039;t think so buddy
What&#039;s the equivalent of win forms in java? 
br
Some GUI you just drag and drop and it just werks. 
br
I have to make some small assignemnt doesn&#039;t have to be pretty or new epic stuff should just werk.

a href="/g/thread/71698424#p71705236" class="quotelink"
&gt;&gt;71705236
/a

br

span class="quote"
&gt;the contempt business people have for devs
/span

br

br
story time??

a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a

br
I was introduced to JavaFX or swing. I don&#039;t recall which. There was a new thing coming out which we didn&#039;t learn. But that was many years ago.
br
Search for Java window builder and see what that is.
Exceptions are vastly superior to C/Rust/Go-style error handling
i can&#039;t stop procrastinating asjdhahfgggasliuglajskd

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
lumping c, rust and go together like they&#039;re the same just demonstrates you&#039;re a retard

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Deoptimising.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Correct and also one of the many reasons C++ is the best language

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Yeah lemme just unwind stack at any tiny problem. Try catch is only good to make a program shut up, not your for reliability

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
this, thanks to exceptions I never have to use those bloated if/else
Some anon was asking for the updated one

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
No, Haskell&#039;s Either-likes is the only sane way to work with computations that can fail. Exceptions are yet another, invisible and requiring special syntax and runtime support to handle way to return value from a function.
br
Exceptions are 100% retarded invention.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br

span class="quote"
&gt; Haskell&#039;s Either-likes
/span

br
you mean monad transformers

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
You don&#039;t need that meme shit, just a type that can represent a value or an error

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
monad transformers are a rather complicated notion but also become necessary to subsume exceptins

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
They&#039;re enabling global error.
br
But they&#039;re not very good in the small. So many complications are introduced by having a second control flow path.

a href="#p71705909" class="quotelink"
&gt;&gt;71705909
/a

br

span class="quote"
&gt;monad transformers are a rather complicated notion
/span

br
Huh? It&#039;s literally just a nicer way of dealing with monads inside monads.

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
This 
a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a


a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
t. seething cnile

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br
you and I know that, pajeet doesn&#039;t
br

br

a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
by the time you&#039;ve implemented decent functions to manipulate error types you have a monad

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br

a href="#p71706051" class="quotelink"
&gt;&gt;71706051
/a

br
t. CS freshman

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
They are not mutually exclusive, a good API will provide both depending on the situation (e.g. file opening).

a href="#p71706122" class="quotelink"
&gt;&gt;71706122
/a

br
muh Enterprise grade 200loc Error sum type

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br
Sometimes (actually quite a lot of times) I want to turn Either&lt;L1, R1&gt; into Either&lt;L2, R1&gt; to enrich the error data. Quite often I want to have E&lt;L1, R1&gt; -&gt; E&lt;L2, R2&gt; to do both.
br
Monad transformers will not help here.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
I&#039;ve heard people say that in C++ exceptions are cheaper than error codes because they&#039;re free when they don&#039;t trigger or something.
br
To me that doesn&#039;t make sense. Whatever mechanism that implements exceptions couldn&#039;t also implement error codes?

a href="#p71706131" class="quotelink"
&gt;&gt;71706131
/a

br
You are correct, they are not mutually exclusive. Exceptions are ok for things like division by zero (because it will be night fucking mare otherwise to do arithmetic)

a href="#p71706173" class="quotelink"
&gt;&gt;71706173
/a

br
uhhhh
Hey, Anone~ Will you learn JavaScript with me? Pretty please?

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
when you return from a function that returns an error code you must compare and branch 
br
with you return from a function that throws an exception you just keep going
br
when an exception is thrown however you get fucked up runtime callstack introspection which is slow as balls however

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
It makes sense if you have 1 fail for 100000 non-fail situations. The stack-unwinding cost will be just amortized.
br
My problem with exception is the cost of programmers understanding the control flow. Java did the right thing demanding exceptions being part of function&#039;s signature. But pajeets were to stupid to understand and properly use and instead did the needful.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
So like std::expected?

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
Go suck a nigger dick or something, sweetie. White men are talking.
Help me bros
br
I am trying to turn Python-driven data analytics into a hobby outside of work, but I have learned that looking for nails (projects) to hit with a hammer (programming) is not the right way to think about programming.
br
What the hell do I do?

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
Don&#039;t know, did not read about it yet, sorry.

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
yeah but not retarded

a href="#p71706147" class="quotelink"
&gt;&gt;71706147
/a

br
monad transformers allow you to make a stack of different ways of handling errors in different parts of you system, they even let you have some kind of priority in them (you don&#039;t really care about the previous formatting error if you&#039;re out of memory)
br
what you&#039;re talking about is completely irrelevant, if your favourite language doesn&#039;t have a bifunctor class/trait you might as well kys.

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
what are you working on, jsposter?

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
Data analytics sounds like a fucking boring hobby, maybe that&#039;s your issue

a href="#p71706240" class="quotelink"
&gt;&gt;71706240
/a

br
Good, I wouldn&#039;t want to use Hasklel either. Too many brainlets smelling the thing up.

a href="#p71706267" class="quotelink"
&gt;&gt;71706267
/a

br
Brainlet. It&#039;s literally the future of our society

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br

span class="quote"
&gt;this is what Haskellers actually believe
/span

br
II love the language but it has its place

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br
Yeah at actual companies, not for fucking hobbyist retards

a href="#p71706326" class="quotelink"
&gt;&gt;71706326
/a

br
A hobby that doubles as a career is literally the most fulfilling thing you can do

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
a dream we will never achieve

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
That&#039;s too cumbersome. You need a syntax/symanic help from the language here for practical usage.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Forcing yourself to enjoy your career as a hobby isn&#039;t the same thing as making money off your hobby though.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Truth
br

br
I get disappointed when it&#039;s time to call it quits I enjoy my work so much.
br

br
Currently working for a big car company working on an electric self driving car to compete with tesla.
br

br
Doing full stack dev with C, C++, Mqtt, React, Redux, Python. 
br

br
God I hate the people I work with but love the project.

a href="#p71706396" class="quotelink"
&gt;&gt;71706396
/a

br
I just feel disappointed when work is over because no gf to go home to
br
Programming is a great job but I get my fill at work and I have other hobbies I&#039;d rather do at home
br
But writing important software at work makes me feel less inclined to do it in my free time as well
Where my /programing as a hobby/ bros at?
br
I need emotional support.

a href="#p71706193" class="quotelink"
&gt;&gt;71706193
/a

br

span class="quote"
&gt;when you return from a function that returns an error code you must compare and branch
/span

br
Yes I accept that in the case where the function is invisible to the compiler there can be complications like double checking.
br
But in other cases I don&#039;t really see it. Because any error will stem from some sort of error evaluation like:
br

pre class="prettyprint"
if(a==5) return -1; //oops, a can&#039;t be 5 here
br

/pre

br
Outside the function we define our error handling with an if that does a redundant check. For the compiler to eliminate the two it needs to know the function code. But if it does it already knows which branch we should go down and it can simply go there. Instead of returning to the location where we made the call to the function that returns an error code we could jump straight into the block catching the error. The compiler might have to reorder some things in some cases but I&#039;d deem the normal case as being trivial.
br

br
So in the non-error case (as determined inside the function) you just return and keep going as you say. It doesn&#039;t seem like anything that&#039;s inherent to exceptions or error codes. If I were to guess it&#039;s just the exceptions being assumed to be costly. That assumption is a lot harder when you&#039;re dealing with error code because they&#039;re really just ints. But the compiler do this if you just place an unlikely attribute around the error branch?

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
I agree. The &#039;invisible control flow&#039; argument is for retards that can&#039;t into exception safety.

a href="#p71706490" class="quotelink"
&gt;&gt;71706490
/a

br

span class="quote"
&gt;For the compiler to eliminate the two it needs to know the function code.
/span

br
One of the two.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
never gonna make  it.

a href="#p71706524" class="quotelink"
&gt;&gt;71706524
/a

br
Bullies should go neck themselves desu.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
All the people jerking over monads and exceptions are hobbyists
Is it just me who looks at this and says 
br

span class="quote"
&gt;Wow so elegant. I can&#039;t believe I used to do anything without writing a new class at every step
/span

br
And then you just rest blissfully knowing you need to consider partial state at every turn because you compile with exceptions enabled.
br

br
More seriously. This is a blatant overuse of global error handling. Exceptions and its devotees encourage that.
Small sql question, is the arrangement for checks important? 
br
Like 
br
Select * 
br
From person p, customer c
br
Where p.id = c.id
br
And something something.

a href="#p71706614" class="quotelink"
&gt;&gt;71706614
/a

br
Sorry buddy but i haven no idea what monad is.
Guys, I hate my career. Did any of you get into programming later in life?

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
Not a problem with smart pointers but yeah exceptions are shit but C++ isn&#039;t &quot;elegant&quot; to begin with

a href="#p71706377" class="quotelink"
&gt;&gt;71706377
/a

br
yes, it&#039;s called do notation

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
My advice is to brainstorm business ideas and see your hobby as a potential source of income.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
I program at home and at work. Does that count?

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
I see. OOM is every relevant error for Haskell.

a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a

br
I&#039;m living it.

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
I started young but I know it&#039;s possible to get into it later. Back in the day, a lot of old engineers suddenly had to learn programming just to keep their jobs.

a href="#p71706684" class="quotelink"
&gt;&gt;71706684
/a

br
That is just syntax help, you mong.

a href="#p71706692" class="quotelink"
&gt;&gt;71706692
/a

br
I do the same but my profession is not related to computers.
br
im medfag by trade

a href="#p71706703" class="quotelink"
&gt;&gt;71706703
/a

br
based

a href="#p71706728" class="quotelink"
&gt;&gt;71706728
/a

br
that&#039;s literally what you asked for, retard

a href="#p71706646" class="quotelink"
&gt;&gt;71706646
/a

br
1) No
br
2) Use joins

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
Got my first programming job at 27. Was programming as a hobby for 4 years by then.

a href="#p71706780" class="quotelink"
&gt;&gt;71706780
/a

br
1) what I wanted to say was is a=b the same as b=a? In terms of equals 
br
2) doesn‘t it join automatically? (Just learning it and using some tasks from prof)

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br

a href="#p71706680" class="quotelink"
&gt;&gt;71706680
/a

br
it&#039;s a fucking tutorial, of course you&#039;re going to ask &quot;why would I do this in production code&quot;

a href="#p71706809" class="quotelink"
&gt;&gt;71706809
/a

br
1) Yes, same thing.
br
2) The query optimiser might convert that to joins, but you should not rely on it and write using joins yourself.
this is going to sound retarded but I want to start some sort of foss product, i just dont know what to do.  Are there any recommended sites for &quot;shit we need but no ones done it yet&quot;?

a href="#p71706755" class="quotelink"
&gt;&gt;71706755
/a

br
Remove nigger sperm from your cucky eyes, and read this again: 
a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a
 past &quot;syntax&quot; word.

a href="#p71706832" class="quotelink"
&gt;&gt;71706832
/a

br
https://en.wikibooks.org/wiki/C%2B%
wbr
2B_Programming/Exception_Handling
br

span class="quote"
&gt;Writing exception safe code
/span

br
It&#039;s about practice. Not explaining how exceptions work.
br
That nuance clearly wasn&#039;t in my post though.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You&#039;re a bit late. This whole programming thing is almost over. It&#039;s hard to document what&#039;s left to do when there&#039;s so little.

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
You don&#039;t need to declare a class for every delete, that&#039;s what unique_ptr is for.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
Composer for Blender.
br
Literally the only thing it needs.
br
Look at Nuke does and copy it to blender,you will probably be named FOSS hero.

a href="#p71706881" class="quotelink"
&gt;&gt;71706881
/a

br
yeah I know.  Im just bored at home.  I guess I could contribute to some apache stuff in my free time

a href="#p71706887" class="quotelink"
&gt;&gt;71706887
/a

br

span class="quote"
&gt;Literally the only thing it needs.
/span

br
Have you ever used other 3D software? Blender has gotten pretty good (especially for being free), but it&#039;s still lacking in a lot of areas.

a href="#p71706895" class="quotelink"
&gt;&gt;71706895
/a

br
If you already have a job, please don&#039;t.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You could go ask people other than programmers. I&#039;m sure there&#039;s a lot of people who don&#039;t have access to what they want because they&#039;re only comfortable with GUI.

a href="#p71706871" class="quotelink"
&gt;&gt;71706871
/a

br
makes more sense
br
still, using allocating/freeing heap memory as an example in a &quot;best practices&quot; section is dumb because best practice is use the standard library type for that

a href="#p71706943" class="quotelink"
&gt;&gt;71706943
/a

br
I believe that blender has the potential to be the best 3d software paid or not.
br
Its not lacking much honestly.
.

a href="#p71706866" class="quotelink"
&gt;&gt;71706866
/a

br
you quoted the wrong post but thanks for the (you) anon

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Restarts are vastly superior to exceptions
Old thread: 
a href="/g/thread/71698424#p71698424" class="quotelink"
&gt;&gt;71698424
/a

br

br
What are you working on, /g/?
First for C++ is the only language you need

a href="#p71705326" class="quotelink"
&gt;&gt;71705326
/a

br
*Assembly, you stupid nigger.

a href="#p71705305" class="quotelink"
&gt;&gt;71705305
/a

br
literally nothing
br
im balls deep in powertracing issues at work and i have no energy when i come home anymore

a href="#p71705347" class="quotelink"
&gt;&gt;71705347
/a

br

span class="quote"
&gt;learn x86 assembly
/span

br

span class="quote"
&gt;stuck on desert island with raspberry pi
/span

br

span class="quote"
&gt;can&#039;t do anything 
/span

br
Yeah I don&#039;t think so buddy
What&#039;s the equivalent of win forms in java? 
br
Some GUI you just drag and drop and it just werks. 
br
I have to make some small assignemnt doesn&#039;t have to be pretty or new epic stuff should just werk.

a href="/g/thread/71698424#p71705236" class="quotelink"
&gt;&gt;71705236
/a

br

span class="quote"
&gt;the contempt business people have for devs
/span

br

br
story time??

a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a

br
I was introduced to JavaFX or swing. I don&#039;t recall which. There was a new thing coming out which we didn&#039;t learn. But that was many years ago.
br
Search for Java window builder and see what that is.
Exceptions are vastly superior to C/Rust/Go-style error handling
i can&#039;t stop procrastinating asjdhahfgggasliuglajskd

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
lumping c, rust and go together like they&#039;re the same just demonstrates you&#039;re a retard

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Deoptimising.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Correct and also one of the many reasons C++ is the best language

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Yeah lemme just unwind stack at any tiny problem. Try catch is only good to make a program shut up, not your for reliability

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
this, thanks to exceptions I never have to use those bloated if/else
Some anon was asking for the updated one

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
No, Haskell&#039;s Either-likes is the only sane way to work with computations that can fail. Exceptions are yet another, invisible and requiring special syntax and runtime support to handle way to return value from a function.
br
Exceptions are 100% retarded invention.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br

span class="quote"
&gt; Haskell&#039;s Either-likes
/span

br
you mean monad transformers

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
You don&#039;t need that meme shit, just a type that can represent a value or an error

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
monad transformers are a rather complicated notion but also become necessary to subsume exceptins

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
They&#039;re enabling global error.
br
But they&#039;re not very good in the small. So many complications are introduced by having a second control flow path.

a href="#p71705909" class="quotelink"
&gt;&gt;71705909
/a

br

span class="quote"
&gt;monad transformers are a rather complicated notion
/span

br
Huh? It&#039;s literally just a nicer way of dealing with monads inside monads.

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
This 
a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a


a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
t. seething cnile

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br
you and I know that, pajeet doesn&#039;t
br

br

a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
by the time you&#039;ve implemented decent functions to manipulate error types you have a monad

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br

a href="#p71706051" class="quotelink"
&gt;&gt;71706051
/a

br
t. CS freshman

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
They are not mutually exclusive, a good API will provide both depending on the situation (e.g. file opening).

a href="#p71706122" class="quotelink"
&gt;&gt;71706122
/a

br
muh Enterprise grade 200loc Error sum type

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br
Sometimes (actually quite a lot of times) I want to turn Either&lt;L1, R1&gt; into Either&lt;L2, R1&gt; to enrich the error data. Quite often I want to have E&lt;L1, R1&gt; -&gt; E&lt;L2, R2&gt; to do both.
br
Monad transformers will not help here.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
I&#039;ve heard people say that in C++ exceptions are cheaper than error codes because they&#039;re free when they don&#039;t trigger or something.
br
To me that doesn&#039;t make sense. Whatever mechanism that implements exceptions couldn&#039;t also implement error codes?

a href="#p71706131" class="quotelink"
&gt;&gt;71706131
/a

br
You are correct, they are not mutually exclusive. Exceptions are ok for things like division by zero (because it will be night fucking mare otherwise to do arithmetic)

a href="#p71706173" class="quotelink"
&gt;&gt;71706173
/a

br
uhhhh
Hey, Anone~ Will you learn JavaScript with me? Pretty please?

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
when you return from a function that returns an error code you must compare and branch 
br
with you return from a function that throws an exception you just keep going
br
when an exception is thrown however you get fucked up runtime callstack introspection which is slow as balls however

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
It makes sense if you have 1 fail for 100000 non-fail situations. The stack-unwinding cost will be just amortized.
br
My problem with exception is the cost of programmers understanding the control flow. Java did the right thing demanding exceptions being part of function&#039;s signature. But pajeets were to stupid to understand and properly use and instead did the needful.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
So like std::expected?

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
Go suck a nigger dick or something, sweetie. White men are talking.
Help me bros
br
I am trying to turn Python-driven data analytics into a hobby outside of work, but I have learned that looking for nails (projects) to hit with a hammer (programming) is not the right way to think about programming.
br
What the hell do I do?

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
Don&#039;t know, did not read about it yet, sorry.

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
yeah but not retarded

a href="#p71706147" class="quotelink"
&gt;&gt;71706147
/a

br
monad transformers allow you to make a stack of different ways of handling errors in different parts of you system, they even let you have some kind of priority in them (you don&#039;t really care about the previous formatting error if you&#039;re out of memory)
br
what you&#039;re talking about is completely irrelevant, if your favourite language doesn&#039;t have a bifunctor class/trait you might as well kys.

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
what are you working on, jsposter?

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
Data analytics sounds like a fucking boring hobby, maybe that&#039;s your issue

a href="#p71706240" class="quotelink"
&gt;&gt;71706240
/a

br
Good, I wouldn&#039;t want to use Hasklel either. Too many brainlets smelling the thing up.

a href="#p71706267" class="quotelink"
&gt;&gt;71706267
/a

br
Brainlet. It&#039;s literally the future of our society

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br

span class="quote"
&gt;this is what Haskellers actually believe
/span

br
II love the language but it has its place

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br
Yeah at actual companies, not for fucking hobbyist retards

a href="#p71706326" class="quotelink"
&gt;&gt;71706326
/a

br
A hobby that doubles as a career is literally the most fulfilling thing you can do

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
a dream we will never achieve

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
That&#039;s too cumbersome. You need a syntax/symanic help from the language here for practical usage.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Forcing yourself to enjoy your career as a hobby isn&#039;t the same thing as making money off your hobby though.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Truth
br

br
I get disappointed when it&#039;s time to call it quits I enjoy my work so much.
br

br
Currently working for a big car company working on an electric self driving car to compete with tesla.
br

br
Doing full stack dev with C, C++, Mqtt, React, Redux, Python. 
br

br
God I hate the people I work with but love the project.

a href="#p71706396" class="quotelink"
&gt;&gt;71706396
/a

br
I just feel disappointed when work is over because no gf to go home to
br
Programming is a great job but I get my fill at work and I have other hobbies I&#039;d rather do at home
br
But writing important software at work makes me feel less inclined to do it in my free time as well
Where my /programing as a hobby/ bros at?
br
I need emotional support.

a href="#p71706193" class="quotelink"
&gt;&gt;71706193
/a

br

span class="quote"
&gt;when you return from a function that returns an error code you must compare and branch
/span

br
Yes I accept that in the case where the function is invisible to the compiler there can be complications like double checking.
br
But in other cases I don&#039;t really see it. Because any error will stem from some sort of error evaluation like:
br

pre class="prettyprint"
if(a==5) return -1; //oops, a can&#039;t be 5 here
br

/pre

br
Outside the function we define our error handling with an if that does a redundant check. For the compiler to eliminate the two it needs to know the function code. But if it does it already knows which branch we should go down and it can simply go there. Instead of returning to the location where we made the call to the function that returns an error code we could jump straight into the block catching the error. The compiler might have to reorder some things in some cases but I&#039;d deem the normal case as being trivial.
br

br
So in the non-error case (as determined inside the function) you just return and keep going as you say. It doesn&#039;t seem like anything that&#039;s inherent to exceptions or error codes. If I were to guess it&#039;s just the exceptions being assumed to be costly. That assumption is a lot harder when you&#039;re dealing with error code because they&#039;re really just ints. But the compiler do this if you just place an unlikely attribute around the error branch?

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
I agree. The &#039;invisible control flow&#039; argument is for retards that can&#039;t into exception safety.

a href="#p71706490" class="quotelink"
&gt;&gt;71706490
/a

br

span class="quote"
&gt;For the compiler to eliminate the two it needs to know the function code.
/span

br
One of the two.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
never gonna make  it.

a href="#p71706524" class="quotelink"
&gt;&gt;71706524
/a

br
Bullies should go neck themselves desu.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
All the people jerking over monads and exceptions are hobbyists
Is it just me who looks at this and says 
br

span class="quote"
&gt;Wow so elegant. I can&#039;t believe I used to do anything without writing a new class at every step
/span

br
And then you just rest blissfully knowing you need to consider partial state at every turn because you compile with exceptions enabled.
br

br
More seriously. This is a blatant overuse of global error handling. Exceptions and its devotees encourage that.
Small sql question, is the arrangement for checks important? 
br
Like 
br
Select * 
br
From person p, customer c
br
Where p.id = c.id
br
And something something.

a href="#p71706614" class="quotelink"
&gt;&gt;71706614
/a

br
Sorry buddy but i haven no idea what monad is.
Guys, I hate my career. Did any of you get into programming later in life?

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
Not a problem with smart pointers but yeah exceptions are shit but C++ isn&#039;t &quot;elegant&quot; to begin with

a href="#p71706377" class="quotelink"
&gt;&gt;71706377
/a

br
yes, it&#039;s called do notation

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
My advice is to brainstorm business ideas and see your hobby as a potential source of income.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
I program at home and at work. Does that count?

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
I see. OOM is every relevant error for Haskell.

a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a

br
I&#039;m living it.

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
I started young but I know it&#039;s possible to get into it later. Back in the day, a lot of old engineers suddenly had to learn programming just to keep their jobs.

a href="#p71706684" class="quotelink"
&gt;&gt;71706684
/a

br
That is just syntax help, you mong.

a href="#p71706692" class="quotelink"
&gt;&gt;71706692
/a

br
I do the same but my profession is not related to computers.
br
im medfag by trade

a href="#p71706703" class="quotelink"
&gt;&gt;71706703
/a

br
based

a href="#p71706728" class="quotelink"
&gt;&gt;71706728
/a

br
that&#039;s literally what you asked for, retard

a href="#p71706646" class="quotelink"
&gt;&gt;71706646
/a

br
1) No
br
2) Use joins

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
Got my first programming job at 27. Was programming as a hobby for 4 years by then.

a href="#p71706780" class="quotelink"
&gt;&gt;71706780
/a

br
1) what I wanted to say was is a=b the same as b=a? In terms of equals 
br
2) doesn‘t it join automatically? (Just learning it and using some tasks from prof)

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br

a href="#p71706680" class="quotelink"
&gt;&gt;71706680
/a

br
it&#039;s a fucking tutorial, of course you&#039;re going to ask &quot;why would I do this in production code&quot;

a href="#p71706809" class="quotelink"
&gt;&gt;71706809
/a

br
1) Yes, same thing.
br
2) The query optimiser might convert that to joins, but you should not rely on it and write using joins yourself.
this is going to sound retarded but I want to start some sort of foss product, i just dont know what to do.  Are there any recommended sites for &quot;shit we need but no ones done it yet&quot;?

a href="#p71706755" class="quotelink"
&gt;&gt;71706755
/a

br
Remove nigger sperm from your cucky eyes, and read this again: 
a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a
 past &quot;syntax&quot; word.

a href="#p71706832" class="quotelink"
&gt;&gt;71706832
/a

br
https://en.wikibooks.org/wiki/C%2B%
wbr
2B_Programming/Exception_Handling
br

span class="quote"
&gt;Writing exception safe code
/span

br
It&#039;s about practice. Not explaining how exceptions work.
br
That nuance clearly wasn&#039;t in my post though.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You&#039;re a bit late. This whole programming thing is almost over. It&#039;s hard to document what&#039;s left to do when there&#039;s so little.

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
You don&#039;t need to declare a class for every delete, that&#039;s what unique_ptr is for.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
Composer for Blender.
br
Literally the only thing it needs.
br
Look at Nuke does and copy it to blender,you will probably be named FOSS hero.

a href="#p71706881" class="quotelink"
&gt;&gt;71706881
/a

br
yeah I know.  Im just bored at home.  I guess I could contribute to some apache stuff in my free time

a href="#p71706887" class="quotelink"
&gt;&gt;71706887
/a

br

span class="quote"
&gt;Literally the only thing it needs.
/span

br
Have you ever used other 3D software? Blender has gotten pretty good (especially for being free), but it&#039;s still lacking in a lot of areas.

a href="#p71706895" class="quotelink"
&gt;&gt;71706895
/a

br
If you already have a job, please don&#039;t.

a href="#p71706857" class="quotelink"
&gt;&gt;71706857
/a

br
You could go ask people other than programmers. I&#039;m sure there&#039;s a lot of people who don&#039;t have access to what they want because they&#039;re only comfortable with GUI.

a href="#p71706871" class="quotelink"
&gt;&gt;71706871
/a

br
makes more sense
br
still, using allocating/freeing heap memory as an example in a &quot;best practices&quot; section is dumb because best practice is use the standard library type for that

a href="#p71706943" class="quotelink"
&gt;&gt;71706943
/a

br
I believe that blender has the potential to be the best 3d software paid or not.
br
Its not lacking much honestly.
.

a href="#p71706866" class="quotelink"
&gt;&gt;71706866
/a

br
you quoted the wrong post but thanks for the (you) anon

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Restarts are vastly superior to exceptions

a href="#p71707083" class="quotelink"
&gt;&gt;71707083
/a

br
hehe anal

span class="quote"
&gt;GC language users: you don&#039;t have to manually free memory! So convenient! 
/span

br

span class="quote"
&gt;.Dispose(): I&#039;m about to end this man&#039;s whole career
/span

br
What&#039;s the point of GC if you have to do essentially the same shit for some objects.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Just don&#039;t input wrong data LMAO.
Programming is hard or I am just a brainlet... :(
br

br
I spent hours understand what is going on here

a href="#p71707203" class="quotelink"
&gt;&gt;71707203
/a

br
Dispose() isn&#039;t really about freeing memory, but ok

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Please printscreen, anon, I can&#039;t read this shit

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;taking a picture of your screen
/span


a href="#p71707203" class="quotelink"
&gt;&gt;71707203
/a

br
You basically said it yourself already, you only have to do it for some very large objects and you don&#039;t have to be nearly as cautious about it

a href="#p71707227" class="quotelink"
&gt;&gt;71707227
/a

br
It&#039;s not about memory but you have to manage those objects exactly the same way you have to free memory.

a href="#p71707257" class="quotelink"
&gt;&gt;71707257
/a

br
And garbage collectors manage memory

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Looks like somebody is btfo.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;Shot on Mi 9 SE AI triple camera
/span


a href="#p71706984" class="quotelink"
&gt;&gt;71706984
/a

br
Does it have the potential? Sure, it made huge strides in the last decade going from GIMP level to software that is actually on generally equal footing with others.
br
And while it is a very good overall package, but for specific areas I&#039;d still rather pick something like ZBrush, Substance Designer/Painter, Houdini, literally anything else for UVs, etc. The only edge in those areas Blender has is the very tight integration between its components, but that often doesn&#039;t make up for how much Blender lacks. 
br
Frankly, the biggest reason that Blender has gotten so good is that Autodesk has been totally slacking off for years. If they/some other company get their shit together, it could change again.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
Be more specific

a href="#p71707265" class="quotelink"
&gt;&gt;71707265
/a

br
And I&#039;m saying that it isn&#039;t much of an improvement and I can&#039;t even wrap this dispose crap with RAII.

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
The fact that you took a photo of your screen confirms that you are, in fact, a brainlet. I&#039;m sorry anon

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br

span class="quote"
&gt;&quot;Programming&quot;
/span

br

span class="quote"
&gt;Posts a screenshot of not-C++
/span

GC users are retards who forget that memory isn&#039;t the only resource that needs to be managed.

a href="#p71707289" class="quotelink"
&gt;&gt;71707289
/a

br

span class="quote"
&gt;resource A has to be managed 95% of the time
/span

br

span class="quote"
&gt;there&#039;s an infinite amount of other resources but you have to manage them relatively rarely
/span

br

span class="quote"
&gt;automate management of resource A
/span

br

span class="quote"
&gt;still have to manage all the other possible resources
/span

br

span class="quote"
&gt;this isn&#039;t an improvement
/span


a href="#p71707316" class="quotelink"
&gt;&gt;71707316
/a

br
GC was invented by someone much smarter than you&#039;ll ever be, brainlet.

a href="#p71707289" class="quotelink"
&gt;&gt;71707289
/a

br
C#, Java etc allow you to wrap them in stuff like try-with-resources, learn your languages.

a href="#p71707307" class="quotelink"
&gt;&gt;71707307
/a

br

span class="quote"
&gt;&gt;&quot;&quot;
/span


a href="#p71707333" class="quotelink"
&gt;&gt;71707333
/a

br
If he&#039;s so smart then why didn&#039;t he generalize GC to manage more than just memory?
br
hmmmmm
Something that scrapes Anilist for the airing shows in a given season and spits out an RSS and Download Rules to media/anime/airing/season.year/show
wbr
/ file to append to the end of your QBittorrent rules file.

a href="#p71707351" class="quotelink"
&gt;&gt;71707351
/a

br
Yes. In C++ multi character strings are enclosed with &quot;. Don&#039;t be a nigger.

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
because lisp can handle the rest

a href="#p71707370" class="quotelink"
&gt;&gt;71707370
/a

br
anon was complimenting your greentext skills

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
You got a shitpost to your shitpost, and you&#039;re still the retard. Lisp pioneered gc among a bazillion other shit, now go figure it the fuck out on your own.

a href="#p71707352" class="quotelink"
&gt;&gt;71707352
/a

br
he did, ur language is just too shit.

a href="#p71707411" class="quotelink"
&gt;&gt;71707411
/a

br

span class="quote"
&gt;my language
/span

br
I only use programming languages, so obviously I don&#039;t have to deal with GCs.

a href="#p71707424" class="quotelink"
&gt;&gt;71707424
/a

br
figures why you still haven&#039;t collected yourself

a href="#p71707370" class="quotelink"
&gt;&gt;71707370
/a

br
this 
a href="#p71707382" class="quotelink"
&gt;&gt;71707382
/a

br
for liberal definitions of complimenting

a href="#p71707446" class="quotelink"
&gt;&gt;71707446
/a

br
Are you complaining about the combination of different quoting methods? I don&#039;t think there&#039;s any problem with it.

a href="#p71706482" class="quotelink"
&gt;&gt;71706482
/a

br
This. I want to do it in my free time, but the thought of doing unpaid labor physically pains me.

a href="#p71707347" class="quotelink"
&gt;&gt;71707347
/a

br
C# has using but it&#039;s not automatic, you have to wrap every instance of a class.

a href="#p71707547" class="quotelink"
&gt;&gt;71707547
/a

br
Good point.
Is there a comfy and &quot;safe&quot; career path to go after with a CS degree?
br
Something that if future proof and if you are able to learn it you will do it with ease and never fail.

a href="#p71707562" class="quotelink"
&gt;&gt;71707562
/a

br
No, because your less comfy peers will automate your work away.

a href="#p71707197" class="quotelink"
&gt;&gt;71707197
/a

raii is completely redundant if you have generics and ideally C++ style references

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br
You are wrong and have no idea what you&#039;re talking about.

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br
Raii is to ensure resources are freed even when there&#039;s an unhandled exception.

a href="#p71707643" class="quotelink"
&gt;&gt;71707643
/a

br

span class="quote"
&gt;C++ style references
/span

br
So, RAII?

a href="#p71707657" class="quotelink"
&gt;&gt;71707657
/a

br

pre class="prettyprint"
template &lt;typename T, typename F&gt;
br
void scoped(F &amp;fn)
br
{
br
    T obj; // presume POD
br
    init(&amp;obj);
br
    f(obj); // presume takes an argument of T&amp;
br
    close(&amp;obj);
br
}
/pre

br
passing arguments to init, returning values from f and handling exceptions is left as an exercise for the reader

a href="#p71707347" class="quotelink"
&gt;&gt;71707347
/a

br

a href="#p71707547" class="quotelink"
&gt;&gt;71707547
/a

br
Java has Lombok that provides an annotation for easy management, C# 8.0 has using declarations that do the same thing.
br
Sure, it&#039;s not automatic but it&#039;s not as painful as having to start logic at column 120 because you have a few nested using/try-with-resources blocks.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
I&#039;m sure dynamic allocation is left as a reader exercise, too.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br

span class="quote"
&gt;presume POD
/span

br
It&#039;s shit.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
init is your ctor and close is your dtor. that&#039;s where your dynamic allocation takes place.

a href="#p71707562" class="quotelink"
&gt;&gt;71707562
/a

br
Mananger, a lot CS just get decent money,Networking and experience and move up to non-IT jobs, just autist get code monkey path.

a href="#p71707749" class="quotelink"
&gt;&gt;71707749
/a

br

span class="quote"
&gt;missing the point
/span

br
all that comment intends to convey is that there won&#039;t be a ctor and dtor implicitly generated
br

br

a href="#p71707754" class="quotelink"
&gt;&gt;71707754
/a
 for 
a href="#p71707746" class="quotelink"
&gt;&gt;71707746
/a


a href="#p71707754" class="quotelink"
&gt;&gt;71707754
/a

br

a href="#p71707771" class="quotelink"
&gt;&gt;71707771
/a

br
Okay, so why write all that boilerplate when you can have the language handle it for you?
Recommend me some quick resource to learn git and github

a href="#p71707829" class="quotelink"
&gt;&gt;71707829
/a

br
man git

a href="#p71706211" class="quotelink"
&gt;&gt;71706211
/a

br

a href="#p71706193" class="quotelink"
&gt;&gt;71706193
/a

br
Here&#039;s a really nice benchmark on the performance of exceptions in Java. They can be much faster than anything else if done non-frequently.
br
https://shipilev.net/blog/2014/exce
wbr
ptional-performance/

a href="#p71707791" class="quotelink"
&gt;&gt;71707791
/a

br
#1 it&#039;s explicit
br
c++ syntax is a clusterfuck but in a sane language with mlish syntax it&#039;d be lean enough to invoke and use. outside of those domains it would be at least on par with the try-with-resources/using/with constructs poolangs give you. 
br
#2 you don&#039;t have to jump through insane hoops when you manually manage resource lifetimes. you just call init and close like you&#039;re used too. if you&#039;ve ever written anything approximating a standard library container you know what the problem here is.

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
Just use std::array
br
It doesn&#039;t have any overhead

a href="#p71707844" class="quotelink"
&gt;&gt;71707844
/a

br
I&#039;ve written multiple standard library containers and you&#039;re definitely doing something wrong.

a href="#p71707481" class="quotelink"
&gt;&gt;71707481
/a

br
that&#039;s what you&#039;d like to think

a href="#p71707868" class="quotelink"
&gt;&gt;71707868
/a

br
how can you even stand using placement new

a href="#p71707893" class="quotelink"
&gt;&gt;71707893
/a

br
What&#039;s fucking wrong with it?
br
Are you retarded?

a href="#p71707901" class="quotelink"
&gt;&gt;71707901
/a

br
everything that&#039;s wrong with initialisation in C++ and then everything that&#039;s wrong with the new operator

a href="#p71707963" class="quotelink"
&gt;&gt;71707963
/a

br
So nothing
If i learn c++ then i need to specialize in something right? I cant just randomly write random useless code. i wont get a job for audio processing if i have no related knowledge but just c++ knowledge? If thats true then what are the specialities people focus on? What do you with c++?

a href="#p71707983" class="quotelink"
&gt;&gt;71707983
/a

br

span class="quote"
&gt;If thats true then what are the specialities people focus on?
/span

br
things they like

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
zero-cost exception &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Normal try-catch from Java/C++/etc. What we have in most modern languages is horrible for performance (even when no exception is thrown) and Pajeets in Java absolutely ABUSE exceptions and throw it all over the place. /g/ is basically traumatized by this so there&#039;s no hope in anyone here using exceptions.

a href="#p71707973" class="quotelink"
&gt;&gt;71707973
/a

br
assuming this is only passed types with well behaved constructors and destructors, when does this invoke undefined behaviour?
br

pre class="prettyprint"
template &lt;typename T&gt;
br
void foo()
br
{
br
    delete new T;
br
}
/pre

br

br

a href="#p71708009" class="quotelink"
&gt;&gt;71708009
/a

br
wait does java and the like not have zero cost exceptions? C++ has had it for eons

a href="#p71707973" class="quotelink"
&gt;&gt;71707973
/a

br

span class="quote"
&gt;nothing
/span

br
http://mikelui.io/2019/01/03/seriou
wbr
sly-bonkers.html

a href="#p71708023" class="quotelink"
&gt;&gt;71708023
/a

br
I could be wrong, maybe a newer JVM finally got them. I try to stay away from pajeet land.

a href="#p71708023" class="quotelink"
&gt;&gt;71708023
/a

br
You do realize placement new doesn&#039;t allocate, right.
br
Literally all placement new does is call the constructor on an address.
br
Your question is irrelevant.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
how do you even get onto the internet with a brain that small?

a href="#p71707999" class="quotelink"
&gt;&gt;71707999
/a

br
Ok but how realistic is it to learn at home as neet?

a href="#p71708054" class="quotelink"
&gt;&gt;71708054
/a

br
my question is demonstrative of how busted new and delete are, but if you want more details
br
http://www.scs.stanford.edu/~dm/hom
wbr
e/papers/c++-new.html

a href="#p71708084" class="quotelink"
&gt;&gt;71708084
/a

br

span class="quote"
&gt;my question is demonstrative of how busted new and delete are
/span

br
I&#039;ll say it again. Placement new is not the same as new

a href="#p71708064" class="quotelink"
&gt;&gt;71708064
/a

br
as realistic as you maintaining motivation to grind for hours learning how to code for months on end.  so completely unrealistic for you

a href="#p71708023" class="quotelink"
&gt;&gt;71708023
/a

br

span class="quote"
&gt;C++ has had it for eons
/span

br
No it&#039;s still in the proposal stages
br
http://www.open-std.org/jtc1/sc22/w
wbr
g21/docs/papers/2018/p0709r0.pdf

a href="#p71708064" class="quotelink"
&gt;&gt;71708064
/a

br
it depends on the domain. There&#039;s obviously much more literature and open source projects out there on game engines than trading engines, for example.

a href="#p71708113" class="quotelink"
&gt;&gt;71708113
/a

br
the itanium abi adopted by gcc in 2001 describes how exceptions are to be implemented and they cost nothing (except perhaps binary size) unless they are thrown
br

br
also that proposal is just semantically fucked, you dont&#039; want that shit

a href="#p71708092" class="quotelink"
&gt;&gt;71708092
/a

br
Im talking about the subjects where you specialize not code. Stuff like audio processing, machine vision stuff is not just learn code
What can be considered good practices for storing credentials to connect to a SQL database? I&#039;m doing some stuff in Python/Pandas where I need to retrieve some information and I don&#039;t want to hardcode these credentials in.

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
I honestly think that&#039;s bad code in that it takes a pointer  given to it and calls delete on a pointer it didn&#039;t new.  Ownership should be clearly defined and what something does to a pointer should be expected.  The constructor should have only taken a value, and if the destructor is calling delete, made its own call to new.  RAII is there for you.
br

br
I get that it&#039;s a tutorial, but I think it teaches a bad habit.  Whenever possible, shit should be internal, and matched like HTML tags.  Don&#039;t make a thing over here and have it randomly deleted elsewhere.
br

br
Also, it wasn&#039;t clear to me why they didn&#039;t put g() inside of the try block, since it&#039;s what can throw.
http://www.open-std.org/jtc1/sc22/w
wbr
g14/www/docs/n2289.pdf
br
Imagine the seething if this finally made it&#039;s way into C. The committee thought highly of it too.

a href="#p71707728" class="quotelink"
&gt;&gt;71707728
/a

br
This looks like templated C++ code as written by someone really in love with C.

a href="#p71708234" class="quotelink"
&gt;&gt;71708234
/a

br
basically yeah, most of what C++ adds is garbage. if c needed anything adding it needed a metaprogramming framework, macros and templates are not good for either purpose

a href="#p71708171" class="quotelink"
&gt;&gt;71708171
/a

br
If possible you could prompt for the password when your program starts.

a href="#p71708232" class="quotelink"
&gt;&gt;71708232
/a

br
it won&#039;t

a href="#p71708023" class="quotelink"
&gt;&gt;71708023
/a

br
I&#039;m curious, when?

a href="#p71708291" class="quotelink"
&gt;&gt;71708291
/a

br
Cope. The committee liked the original idea.  Just not the retard who wanted to split it into two ideas.

a href="#p71707083" class="quotelink"
&gt;&gt;71707083
/a

br
pfttttt they said anal, haha, the mad man

a href="#p71708145" class="quotelink"
&gt;&gt;71708145
/a

br
same answer

a href="#p71707221" class="quotelink"
&gt;&gt;71707221
/a

br
That&#039;s web development though, not programming.

a href="#p71707609" class="quotelink"
&gt;&gt;71707609
/a

br
dohohohooooho pfttttt

a href="#p71708358" class="quotelink"
&gt;&gt;71708358
/a

br

span class="quote"
&gt;Niall: I am an author of Boost.
/span

br
Why is this man on the C committee?

a href="#p71708454" class="quotelink"
&gt;&gt;71708454
/a

br
The C committee is unironically terrible. C become dominant despite it, not because of it.

a href="#p71708474" class="quotelink"
&gt;&gt;71708474
/a

br

a href="#p71708454" class="quotelink"
&gt;&gt;71708454
/a

br
both committes overlap quite a bit and a good number of proposals are presented for C and C++ or taken from C++.  Reading the minutes of a WG14 meeting is like watching your favorite anime die slowly.
Is it weird that I find Boost really hot?

a href="#p71708748" class="quotelink"
&gt;&gt;71708748
/a

br
kys furfag

a href="#p71708775" class="quotelink"
&gt;&gt;71708775
/a

br
wtf how did you know?
Spent like an hour debugging a zero division error until I realized it basically boils down to shit like this
br

pre class="prettyprint"
asdf :: Int
br
asdf = ((1+2)*4)^24
br

/pre

br
overflowing to a negative number. Why did Python have to make me such a shit coder

a href="#p71708996" class="quotelink"
&gt;&gt;71708996
/a

br
dynamically typed shitlangs rot your brain.
br
this is not a joke.

a href="#p71709010" class="quotelink"
&gt;&gt;71709010
/a

br

span class="quote"
&gt;dynamically typed
/span

br

span class="quote"
&gt;asdf :: Int
/span


a href="#p71709041" class="quotelink"
&gt;&gt;71709041
/a

br
why don&#039;t you actually read his post.

a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a
 javafx studio or something

a href="#p71708996" class="quotelink"
&gt;&gt;71708996
/a

br
use Integer for unbounded ints
Write a function that takes three integer parameters and prints the larger two. You should be able to solve this.

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br
Not doing your homework.

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

pre class="prettyprint"
def faggot( i, j, k ):
br
    print( &quot;{} {}&quot;.format( *sorted( ( i, j, k), reverse = True )[ : 2 ] ) )
/pre


a href="#p71709087" class="quotelink"
&gt;&gt;71709087
/a

br
I already solved it but was curious if /dpt/ had any ingenious solutions.
br

br

pre class="prettyprint"
(cond ((and (&gt; y x) (&gt; z x)) (print y z)))
br
      ((and (&gt; x y) (&gt; z y)) (print x z)))   
br
      ((and (&gt; x z) (&gt; y z)) (print x y)))
br
      (else (print x y)))))
/pre


a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a

br
JavaFX Scene Builder
Is it possible to have a vector of function pointers?

a href="#p71709230" class="quotelink"
&gt;&gt;71709230
/a

br
yes

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

a href="#p71709158" class="quotelink"
&gt;&gt;71709158
/a

br

a href="#p71709186" class="quotelink"
&gt;&gt;71709186
/a

br

br

pre class="prettyprint"
def faggot (i, j, k):
br
    a = [i, j, k]
br
    m = min(a)
br
    print ([x for x in a if x != m])
br

/pre

Is C# worth learning?

a href="#p71709230" class="quotelink"
&gt;&gt;71709230
/a

br
sure, why wouldn&#039;t it be possible?
br

a href="#p71709158" class="quotelink"
&gt;&gt;71709158
/a

br
yuck

a href="#p71709263" class="quotelink"
&gt;&gt;71709263
/a

br
yes
br

br

a href="#p71709230" class="quotelink"
&gt;&gt;71709230
/a

br
yes
br

br
next questions

a href="#p71709254" class="quotelink"
&gt;&gt;71709254
/a

br

a href="#p71709274" class="quotelink"
&gt;&gt;71709274
/a

br

pre class="prettyprint"
def faggot( *args ):
br
    print( &quot;{} {}&quot;.format( *sorted( args )[ -2 : ] ) )
/pre


a href="#p71708775" class="quotelink"
&gt;&gt;71708775
/a

br
I am indifferent to furries but I like c++ boost libraries. Boost is pretty neat desu senpai.

a href="#p71706396" class="quotelink"
&gt;&gt;71706396
/a

br

span class="quote"
&gt;Working on an electric self driving car
/span

br

span class="quote"
&gt;Full stack
/span

br

br
You mean you&#039;re working on their website lmao?

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

pre class="prettyprint"
def queer(i,j,k):
br
    lst = [i,j,k]
br
    a = max(lst) #get 1st max
br
    del lst[lst.index(a)] #delete 1st max
br
    return a,max(lst) # get 1st,2nd max
br

br
print (queer(1,2,3))
br
print (queer(1,1,-1))
br
print (queer(1,2,31))
br
print (queer(1,0,0))
br

/pre


a href="#p71709330" class="quotelink"
&gt;&gt;71709330
/a

br
Making a website with C and C++ lmao

a href="#p71709254" class="quotelink"
&gt;&gt;71709254
/a

br
Using min is pretty clean.
br

br
I was wondering if there was a simple boolean expression like i &gt; j &gt; k that might shortcircuit in the right way to produce a result.

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br
f x y z = drop 1 . sort $ [x,y,z]

a href="#p71709350" class="quotelink"
&gt;&gt;71709350
/a

br
h-heh

a href="#p71709350" class="quotelink"
&gt;&gt;71709350
/a

br
you can&#039;t do that?
br

br
shitty &quot;programmer&quot; detected
I hate python. Recommend a good substitute.

a href="#p71709390" class="quotelink"
&gt;&gt;71709390
/a

br
Nim

a href="#p71709274" class="quotelink"
&gt;&gt;71709274
/a

br

span class="quote"
&gt;sure, why wouldn&#039;t it be possible?
/span

br
Oh I&#039;m dumb. I was using insert instead of push_back.
br

a href="#p71709300" class="quotelink"
&gt;&gt;71709300
/a

br

span class="quote"
&gt;next questions
/span

br
Why are these new captchas taking a million years to complete?

a href="#p71709390" class="quotelink"
&gt;&gt;71709390
/a

br
haskell or sepples

a href="#p71709383" class="quotelink"
&gt;&gt;71709383
/a

br
fucking wt lmao

a href="#p71709254" class="quotelink"
&gt;&gt;71709254
/a

br
doesn&#039;t work for [0,0,1]

a href="#p71709186" class="quotelink"
&gt;&gt;71709186
/a

br

pre class="prettyprint"
(defun print_two_larger (x y z)
br
    (format t &quot;The two largest numbers are ~a~%&quot; (remove (min x y z) (list x y z))))
br

/pre


a href="#p71709435" class="quotelink"
&gt;&gt;71709435
/a

br
This is a good point. Ideally the procedure should still work given arguments like 0,0,1 or 9,9,9.

a href="#p71709312" class="quotelink"
&gt;&gt;71709312
/a

br
if you&#039;re going to do that, here&#039;s an O(n) solution:
br

pre class="prettyprint"
def faggot(*args):
br
  biggest = args[0]
br
  second = args[1]
br
  for arg in args:
br
    if arg &gt; biggest:
br
      second = biggest
br
      biggest = arg
br
    elif arg &gt; second:
br
      second = arg
br
  print(biggest)
br
  print(second)
br

/pre

br

br

a href="#p71709435" class="quotelink"
&gt;&gt;71709435
/a

br
fugg you right
Hi I&#039;m new to coding.
br

br
A while back I read something about how you shouldn&#039;t have methods that are too complex. Avoiding like 7+ lines or whatever in a single method. Obviously this is only if you can help it and things like that. It was more of a guideline than a rule. 
br

br
Does anyone know the name of this concept? It&#039;s bugging me.

a href="#p71709470" class="quotelink"
&gt;&gt;71709470
/a

br

pre class="prettyprint"
import math
br
a = math.inf
br
faggot(a,1,1)
br
# inf
br
# inf
br

/pre

br

br
OH NO NO NO NO NO

a href="#p71709525" class="quotelink"
&gt;&gt;71709525
/a

br
seperation of concerns

a href="#p71709525" class="quotelink"
&gt;&gt;71709525
/a

br
disregard every arbitrary rule like that you read. 
br
It&#039;s nothing but fucking wank. 
br
Everyone programs differently.

a href="#p71709470" class="quotelink"
&gt;&gt;71709470
/a

br

a href="#p71709439" class="quotelink"
&gt;&gt;71709439
/a

br
(print_two_larger 9 9 9) evaluates to false. It&#039;s harder than it first appears! I just realized I can reduce the conditional statement by 1 since there&#039;s only 3 logical cases.

a href="#p71709537" class="quotelink"
&gt;&gt;71709537
/a

br
shit I thought about that but forgot to actually type it
br

pre class="prettyprint"
def faggot(*args):
br
  biggest = args[0]
br
  second = args[1]
br
  for arg in args[1:]
br
    if arg &gt; biggest:
br
      second = biggest
br
      biggest = arg
br
    elif arg &gt; second:
br
      second = arg
br
  print(biggest)
br
  print(second) 
br

/pre


a href="#p71709578" class="quotelink"
&gt;&gt;71709578
/a

br
Since I&#039;m new and learning, I&#039;m goal oriented most of the time but I figured rules like that were decent for learning. Obviously if I can&#039;t accomplish something following that rule, I won&#039;t rack my brain trying to solve it. 
br

br

a href="#p71709548" class="quotelink"
&gt;&gt;71709548
/a

br
I don&#039;t remember this being the name I first of it under but it seems close enough. Thanks.

a href="#p71709525" class="quotelink"
&gt;&gt;71709525
/a

br
OOP artisan meme. Just ignore.

a href="#p71709525" class="quotelink"
&gt;&gt;71709525
/a

br
https://en.wikipedia.org/wiki/SOLID
wbr


a href="#p71709450" class="quotelink"
&gt;&gt;71709450
/a

br

a href="#p71709610" class="quotelink"
&gt;&gt;71709610
/a

br
Sure
br

pre class="prettyprint"
(defun print_two_larger (x y z)
br
    (let ((clean-list (remove-duplicates (list x y z))))
br
     (format t &quot;List with two largest numbers (or largest number): ~a~%&quot; (if (/= (length clean-list) 3) clean-list (remove (min x y z) clean-list))))) 
br

/pre

br

br
Thank me later for your homework.

a href="#p71709525" class="quotelink"
&gt;&gt;71709525
/a

br
John Carmack experimented with inlining all his functions and found it was less buggy (most of his bugs were from uninitialized stuff) and made the control flow of the program more obvious.
anyone here into competitive programming? any advice for a greenhorn?
br
I&#039;m considering trying this friday&#039;s CodeForces round..

a href="#p71708232" class="quotelink"
&gt;&gt;71708232
/a

br
That&#039;s pretty disgusting. Why do they let people who associate with C++ programmers opine here? 
br
People are already having a hard time accepting C11. This just locks the newer standards off into obscurity.

a href="#p71709748" class="quotelink"
&gt;&gt;71709748
/a

br
It&#039;s not homework, it&#039;s from exercise 1.3 in SICP. The implementation was a lot harder than first anticipated so /dpt/ might enjoy the ride too. We are both slightly better programmers now

a href="#p71709751" class="quotelink"
&gt;&gt;71709751
/a

br
That&#039;s the short version of it.
br
http://number-none.com/blow/john_ca
wbr
rmack_on_inlined_code.html
br
The long story is that he now recognizes the importance of state changes not being hidden behind abstractions. It&#039;s a great source of bugs to change state the programmer stands on.
br

span class="quote"
&gt;In the years since I wrote this, I have gotten much more bullish about pure functional programming, even in C/C++ where reasonable.
/span

br

br
When he thinks functional he&#039;s probably not thinking the high-level haskelly stuff.

a href="#p71709838" class="quotelink"
&gt;&gt;71709838
/a

br
I mean they probably expect you to do something with conditionals if you&#039;re this early but yeah the things I posted would allow you to extend this to bigger scopes and you also could count the number of arguments instead of having a dirty &quot;3&quot; in the middle.
br

br
But too fucking lazy. Solution isn&#039;t perfect but it doesn&#039;t matter.

a href="#p71709610" class="quotelink"
&gt;&gt;71709610
/a

br
you really only need one actually
br

pre class="prettyprint"
def fun(i, j, k):
br
  a, b = i, k
br
  if j &gt; a or j &gt; b:
br
    a, b = j, max(a, b)
br
  print(a)
br
  print(b)
br

/pre

br
although technically max(a,b) is a second one
rate my merge sort function
br

pre class="prettyprint"
msort :: Ord a =&gt; [a] -&gt; [a]
br
msort [] = []
br
msort [x] = [x]
br
msort xs = let l = length xs ; h = div l 2
br
           in merge (msort $ take h xs) (msort $ drop h xs) where
br
  merge = curry $ unfoldr ca where
br
    ca ([], []) = Nothing
br
    ca ([], y:ys) = Just (y, ([], ys))
br
    ca (x:xs, []) = Just (x, (xs, []))
br
    ca (x:xs, y:ys)
br
      | x &lt;= y = Just (x, (xs, y:ys))
br
      | x &gt;  y = Just (y, (x:xs, ys))
br

/pre


a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

pre class="prettyprint"
IEnumerable&lt;int&gt; trap(int astolfo, int felix, int hideri)
br
{
br
    return new [] {astolfo, felix, hideri}
br
        .OrderBy(cutest =&gt; cutest)
br
        .Skip(1)
br
    ;
br
}
br

/pre


a href="#p71709900" class="quotelink"
&gt;&gt;71709900
/a

br

span class="quote"
&gt;not ordering by dick size
/span

br

br
anon...

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

a href="#p71709884" class="quotelink"
&gt;&gt;71709884
/a

br
in fact you can do it even cleaner:
br

pre class="prettyprint"
def fun(i, k, j):
br
  if j &gt; i or j &gt; k:
br
    k, i = j, max(i, k)
br
  print(k)
br
  print(i)
br

/pre


a href="#p71709909" class="quotelink"
&gt;&gt;71709909
/a

br
i had that thought but the code&#039;ll become too lewd to post here

a href="#p71709900" class="quotelink"
&gt;&gt;71709900
/a

br

span class="quote"
&gt;.OrderBy(cutest =&gt; cutest)
/span


a href="#p71709621" class="quotelink"
&gt;&gt;71709621
/a

br

span class="quote"
&gt;if I can&#039;t accomplish something following that rule I won&#039;t rack my brain trying to solve it.
/span

br
I wouldn&#039;t say that&#039;s the best strategy. If you follow some good rules you can stick to almost never breaking them and be excellent.
br
Sometimes arbitrary constraints that are pure inconvenience to apply helps you grow. But those should not be applied generally of course.
br

br
What&#039;s worth telling you with regards to this topic is that since programming is a craft/art and not a science you&#039;ll find people who advocate radically different ways of doing it passionately. It will be very difficult to tell as a newbie whats good advice and what isn&#039;t.
br
So think critically about what you&#039;re doing when you&#039;re following their advice and if it seems bonkers you should think about what you&#039;re getting out of it. If you can&#039;t come up with anything you should ask them or someone else.
br

br
There&#039;s a lot of things that are just tradeoffs as well. Maybe something makes you develop a prototype for whatever you&#039;re doing very but it then becomes next to impossible to build on. You should realize the costs and benefits in those situations.
br

br
Thinking about this post it&#039;s probably a bit further ahead than you are. It might not be all that applicable to a complete newbie. But as much as we ridicule them, the people who come into this thread not understanding why pointers need to exist have the potential to be great programmers if they put the time in.

a href="#p71709900" class="quotelink"
&gt;&gt;71709900
/a

br

span class="quote"
&gt;IEnumerable&lt;int&gt;
/span

br
This is so zoy
br

span class="quote"
&gt;ITraversable
/span

br

span class="quote"
&gt;IIterable 
/span

br
gay

a href="#p71710001" class="quotelink"
&gt;&gt;71710001
/a

br
tl;dr just code
br

br
Refine your habits later once you&#039;re at ease with things.

a href="#p71710001" class="quotelink"
&gt;&gt;71710001
/a

br

span class="quote"
&gt;since programming is a craft/art and not a science
/span


a href="#p71710050" class="quotelink"
&gt;&gt;71710050
/a

br
Spotted the dumb pythonista

a href="#p71710069" class="quotelink"
&gt;&gt;71710069
/a

br
Computer science is science dummy. And the only python I&#039;ve written is hacks for people&#039;s stupid broken scripts.
br

br
Code artisans BTFO

a href="#p71710050" class="quotelink"
&gt;&gt;71710050
/a

br

a href="#p71710152" class="quotelink"
&gt;&gt;71710152
/a

br
very compelling arguments

a href="#p71710024" class="quotelink"
&gt;&gt;71710024
/a

br
IFuckable&lt;Trap&gt;

a href="#p71710190" class="quotelink"
&gt;&gt;71710190
/a


a href="#p71709390" class="quotelink"
&gt;&gt;71709390
/a

br
Go

a href="#p71710152" class="quotelink"
&gt;&gt;71710152
/a

br
I bet your code isn&#039;t even GMO free

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

pre class="prettyprint"
void print_largest_two(int x, int y, int z)
br
{
br
    int&amp; a = x;
br
    int&amp; b = y;
br
    int&amp; c = z;
br
    if (a &lt; b) std::swap(a, b);
br
    if (b &lt; c) std::swap(b, c);
br
    if (a &lt; b) std::swap(a, b);
br
    std::printf(&quot;%i, %i\n&quot;, a, b);
br
}
br

/pre

crying while i try doing css

a href="#p71710352" class="quotelink"
&gt;&gt;71710352
/a

br

span class="quote"
&gt;int&amp; a = x;
/span

br

span class="quote"
&gt;int&amp; b = y;
/span

br

span class="quote"
&gt;int&amp; c = z;
/span

br
bruh why

a href="#p71710298" class="quotelink"
&gt;&gt;71710298
/a

br

span class="quote"
&gt;the virgin worried about the ethical impact of his kode and carbon footprint
/span

br

span class="quote"
&gt;the chad nuclear missile guidance system
/span


a href="#p71710352" class="quotelink"
&gt;&gt;71710352
/a

br
see 
a href="#p71709936" class="quotelink"
&gt;&gt;71709936
/a

br
two comparisons is all you need
How do people deal with undefined behaviour? I just spent hours debugging because I forgot to initialize a pointer and therefore a nullpointer check failed.

a href="#p71710535" class="quotelink"
&gt;&gt;71710535
/a

br
I don&#039;t introduce it in the first place.
br
If there are already UBs in your code base you should look into UB sanitizer available in gcc, clang and valgrind.

a href="#p71710535" class="quotelink"
&gt;&gt;71710535
/a

br
my language initializes everything at declaration so this isn&#039;t a problem. Come join us in the current decade.

a href="#p71710535" class="quotelink"
&gt;&gt;71710535
/a

br
Turn on all your compiler warnings. Yes, all of them.

a href="#p71710535" class="quotelink"
&gt;&gt;71710535
/a

br

a href="#p71710613" class="quotelink"
&gt;&gt;71710613
/a
 + -g + valgrind

a href="#p71708996" class="quotelink"
&gt;&gt;71708996
/a

br
Is this ADA?
br

a href="#p71709079" class="quotelink"
&gt;&gt;71709079
/a

br

pre class="prettyprint"
def highest(x,y,z):
br
    nums = [x, y, z]
br
    for i, x in enumerate(sorted(nums)):
br
        if i &lt; 2:
br
            print(i)
br

/pre


a href="#p71710383" class="quotelink"
&gt;&gt;71710383
/a

br
Neat!

a href="#p71710731" class="quotelink"
&gt;&gt;71710731
/a

br
Ada doesn&#039;t have FP style declaration. 
br
that&#039;s most likely haskell.

a href="#p71710731" class="quotelink"
&gt;&gt;71710731
/a

br
I messed this up. My bad.
br

pre class="prettyprint"
def highest(x,y,z):
br
    nums = [x, y, z]
br
    for i, e in enumerate(sorted(nums)):
br
        if i &lt; 2:
br
            print(e)
br

/pre


a href="#p71710613" class="quotelink"
&gt;&gt;71710613
/a

br
I&#039;ll take a look, thanks. 
br

a href="#p71710576" class="quotelink"
&gt;&gt;71710576
/a

br
I think sometimes it&#039;d be inefficient to initialize everything. It&#039;s also for an OS course, so I didn&#039;t have any choice.
br

a href="#p71710613" class="quotelink"
&gt;&gt;71710613
/a

br
Do I need to turn something on beyond -Wall? I had assumed it would include everything.
br

a href="#p71710645" class="quotelink"
&gt;&gt;71710645
/a

br
This might sound stupid, but because I have to connect gdb to QEMU, I haven&#039;t been able to connect to it before it crashes, but if something like that happens again, I&#039;ll try to give it a shot.

a href="#p71710758" class="quotelink"
&gt;&gt;71710758
/a

br
100%. I don&#039;t know of any other language that uses :: for type annotations.

a href="#p71710889" class="quotelink"
&gt;&gt;71710889
/a

br
Clean uses them as well, which is a pretty inspirational lang even though no one uses it. But the better FP langs realized that a single : suffices.

a href="#p71710889" class="quotelink"
&gt;&gt;71710889
/a

br
Perl.

Old thread: 
a href="/g/thread/71698424#p71698424" class="quotelink"
&gt;&gt;71698424
/a

br

br
What are you working on, /g/?
First for C++ is the only language you need

a href="#p71705326" class="quotelink"
&gt;&gt;71705326
/a

br
*Assembly, you stupid nigger.

a href="#p71705305" class="quotelink"
&gt;&gt;71705305
/a

br
literally nothing
br
im balls deep in powertracing issues at work and i have no energy when i come home anymore

a href="#p71705347" class="quotelink"
&gt;&gt;71705347
/a

br

span class="quote"
&gt;learn x86 assembly
/span

br

span class="quote"
&gt;stuck on desert island with raspberry pi
/span

br

span class="quote"
&gt;can&#039;t do anything 
/span

br
Yeah I don&#039;t think so buddy
What&#039;s the equivalent of win forms in java? 
br
Some GUI you just drag and drop and it just werks. 
br
I have to make some small assignemnt doesn&#039;t have to be pretty or new epic stuff should just werk.

a href="/g/thread/71698424#p71705236" class="quotelink"
&gt;&gt;71705236
/a

br

span class="quote"
&gt;the contempt business people have for devs
/span

br

br
story time??

a href="#p71705408" class="quotelink"
&gt;&gt;71705408
/a

br
I was introduced to JavaFX or swing. I don&#039;t recall which. There was a new thing coming out which we didn&#039;t learn. But that was many years ago.
br
Search for Java window builder and see what that is.
Exceptions are vastly superior to C/Rust/Go-style error handling
i can&#039;t stop procrastinating asjdhahfgggasliuglajskd

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
lumping c, rust and go together like they&#039;re the same just demonstrates you&#039;re a retard

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Deoptimising.

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Correct and also one of the many reasons C++ is the best language

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
Yeah lemme just unwind stack at any tiny problem. Try catch is only good to make a program shut up, not your for reliability

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
this, thanks to exceptions I never have to use those bloated if/else
Some anon was asking for the updated one

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
No, Haskell&#039;s Either-likes is the only sane way to work with computations that can fail. Exceptions are yet another, invisible and requiring special syntax and runtime support to handle way to return value from a function.
br
Exceptions are 100% retarded invention.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br

span class="quote"
&gt; Haskell&#039;s Either-likes
/span

br
you mean monad transformers

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
You don&#039;t need that meme shit, just a type that can represent a value or an error

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
monad transformers are a rather complicated notion but also become necessary to subsume exceptins

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
They&#039;re enabling global error.
br
But they&#039;re not very good in the small. So many complications are introduced by having a second control flow path.

a href="#p71705909" class="quotelink"
&gt;&gt;71705909
/a

br

span class="quote"
&gt;monad transformers are a rather complicated notion
/span

br
Huh? It&#039;s literally just a nicer way of dealing with monads inside monads.

a href="#p71705874" class="quotelink"
&gt;&gt;71705874
/a

br
This 
a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a


a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
t. seething cnile

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br
you and I know that, pajeet doesn&#039;t
br

br

a href="#p71705905" class="quotelink"
&gt;&gt;71705905
/a

br
by the time you&#039;ve implemented decent functions to manipulate error types you have a monad

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br

a href="#p71706051" class="quotelink"
&gt;&gt;71706051
/a

br
t. CS freshman

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
They are not mutually exclusive, a good API will provide both depending on the situation (e.g. file opening).

a href="#p71706122" class="quotelink"
&gt;&gt;71706122
/a

br
muh Enterprise grade 200loc Error sum type

a href="#p71705977" class="quotelink"
&gt;&gt;71705977
/a

br

a href="#p71706052" class="quotelink"
&gt;&gt;71706052
/a

br
Sometimes (actually quite a lot of times) I want to turn Either&lt;L1, R1&gt; into Either&lt;L2, R1&gt; to enrich the error data. Quite often I want to have E&lt;L1, R1&gt; -&gt; E&lt;L2, R2&gt; to do both.
br
Monad transformers will not help here.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
I&#039;ve heard people say that in C++ exceptions are cheaper than error codes because they&#039;re free when they don&#039;t trigger or something.
br
To me that doesn&#039;t make sense. Whatever mechanism that implements exceptions couldn&#039;t also implement error codes?

a href="#p71706131" class="quotelink"
&gt;&gt;71706131
/a

br
You are correct, they are not mutually exclusive. Exceptions are ok for things like division by zero (because it will be night fucking mare otherwise to do arithmetic)

a href="#p71706173" class="quotelink"
&gt;&gt;71706173
/a

br
uhhhh
Hey, Anone~ Will you learn JavaScript with me? Pretty please?

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
when you return from a function that returns an error code you must compare and branch 
br
with you return from a function that throws an exception you just keep going
br
when an exception is thrown however you get fucked up runtime callstack introspection which is slow as balls however

a href="#p71706162" class="quotelink"
&gt;&gt;71706162
/a

br
It makes sense if you have 1 fail for 100000 non-fail situations. The stack-unwinding cost will be just amortized.
br
My problem with exception is the cost of programmers understanding the control flow. Java did the right thing demanding exceptions being part of function&#039;s signature. But pajeets were to stupid to understand and properly use and instead did the needful.

a href="#p71705844" class="quotelink"
&gt;&gt;71705844
/a

br
So like std::expected?

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
Go suck a nigger dick or something, sweetie. White men are talking.
Help me bros
br
I am trying to turn Python-driven data analytics into a hobby outside of work, but I have learned that looking for nails (projects) to hit with a hammer (programming) is not the right way to think about programming.
br
What the hell do I do?

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
Don&#039;t know, did not read about it yet, sorry.

a href="#p71706213" class="quotelink"
&gt;&gt;71706213
/a

br
yeah but not retarded

a href="#p71706147" class="quotelink"
&gt;&gt;71706147
/a

br
monad transformers allow you to make a stack of different ways of handling errors in different parts of you system, they even let you have some kind of priority in them (you don&#039;t really care about the previous formatting error if you&#039;re out of memory)
br
what you&#039;re talking about is completely irrelevant, if your favourite language doesn&#039;t have a bifunctor class/trait you might as well kys.

a href="#p71706187" class="quotelink"
&gt;&gt;71706187
/a

br
what are you working on, jsposter?

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
Data analytics sounds like a fucking boring hobby, maybe that&#039;s your issue

a href="#p71706240" class="quotelink"
&gt;&gt;71706240
/a

br
Good, I wouldn&#039;t want to use Hasklel either. Too many brainlets smelling the thing up.

a href="#p71706267" class="quotelink"
&gt;&gt;71706267
/a

br
Brainlet. It&#039;s literally the future of our society

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br

span class="quote"
&gt;this is what Haskellers actually believe
/span

br
II love the language but it has its place

a href="#p71706296" class="quotelink"
&gt;&gt;71706296
/a

br
Yeah at actual companies, not for fucking hobbyist retards

a href="#p71706326" class="quotelink"
&gt;&gt;71706326
/a

br
A hobby that doubles as a career is literally the most fulfilling thing you can do

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
a dream we will never achieve

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
That&#039;s too cumbersome. You need a syntax/symanic help from the language here for practical usage.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Forcing yourself to enjoy your career as a hobby isn&#039;t the same thing as making money off your hobby though.

a href="#p71706350" class="quotelink"
&gt;&gt;71706350
/a

br
Truth
br

br
I get disappointed when it&#039;s time to call it quits I enjoy my work so much.
br

br
Currently working for a big car company working on an electric self driving car to compete with tesla.
br

br
Doing full stack dev with C, C++, Mqtt, React, Redux, Python. 
br

br
God I hate the people I work with but love the project.

a href="#p71706396" class="quotelink"
&gt;&gt;71706396
/a

br
I just feel disappointed when work is over because no gf to go home to
br
Programming is a great job but I get my fill at work and I have other hobbies I&#039;d rather do at home
br
But writing important software at work makes me feel less inclined to do it in my free time as well
Where my /programing as a hobby/ bros at?
br
I need emotional support.

a href="#p71706193" class="quotelink"
&gt;&gt;71706193
/a

br

span class="quote"
&gt;when you return from a function that returns an error code you must compare and branch
/span

br
Yes I accept that in the case where the function is invisible to the compiler there can be complications like double checking.
br
But in other cases I don&#039;t really see it. Because any error will stem from some sort of error evaluation like:
br

pre class="prettyprint"
if(a==5) return -1; //oops, a can&#039;t be 5 here
br

/pre

br
Outside the function we define our error handling with an if that does a redundant check. For the compiler to eliminate the two it needs to know the function code. But if it does it already knows which branch we should go down and it can simply go there. Instead of returning to the location where we made the call to the function that returns an error code we could jump straight into the block catching the error. The compiler might have to reorder some things in some cases but I&#039;d deem the normal case as being trivial.
br

br
So in the non-error case (as determined inside the function) you just return and keep going as you say. It doesn&#039;t seem like anything that&#039;s inherent to exceptions or error codes. If I were to guess it&#039;s just the exceptions being assumed to be costly. That assumption is a lot harder when you&#039;re dealing with error code because they&#039;re really just ints. But the compiler do this if you just place an unlikely attribute around the error branch?

a href="#p71705740" class="quotelink"
&gt;&gt;71705740
/a

br
I agree. The &#039;invisible control flow&#039; argument is for retards that can&#039;t into exception safety.

a href="#p71706490" class="quotelink"
&gt;&gt;71706490
/a

br

span class="quote"
&gt;For the compiler to eliminate the two it needs to know the function code.
/span

br
One of the two.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
never gonna make  it.

a href="#p71706524" class="quotelink"
&gt;&gt;71706524
/a

br
Bullies should go neck themselves desu.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
All the people jerking over monads and exceptions are hobbyists
Is it just me who looks at this and says 
br

span class="quote"
&gt;Wow so elegant. I can&#039;t believe I used to do anything without writing a new class at every step
/span

br
And then you just rest blissfully knowing you need to consider partial state at every turn because you compile with exceptions enabled.
br

br
More seriously. This is a blatant overuse of global error handling. Exceptions and its devotees encourage that.
Small sql question, is the arrangement for checks important? 
br
Like 
br
Select * 
br
From person p, customer c
br
Where p.id = c.id
br
And something something.

a href="#p71706614" class="quotelink"
&gt;&gt;71706614
/a

br
Sorry buddy but i haven no idea what monad is.
Guys, I hate my career. Did any of you get into programming later in life?

a href="#p71706632" class="quotelink"
&gt;&gt;71706632
/a

br
Not a problem with smart pointers but yeah exceptions are shit but C++ isn&#039;t &quot;elegant&quot; to begin with

a href="#p71706377" class="quotelink"
&gt;&gt;71706377
/a

br
yes, it&#039;s called do notation

a href="#p71706235" class="quotelink"
&gt;&gt;71706235
/a

br
My advice is to brainstorm business ideas and see your hobby as a potential source of income.

a href="#p71706483" class="quotelink"
&gt;&gt;71706483
/a

br
I program at home and at work. Does that count?

a href="#p71706261" class="quotelink"
&gt;&gt;71706261
/a

br
I see. OOM is every relevant error for Haskell.

a href="#p71706365" class="quotelink"
&gt;&gt;71706365
/a

br
I&#039;m living it.

a href="#p71706670" class="quotelink"
&gt;&gt;71706670
/a

br
I started young but I know it&#039;s possible to get into it later. Back in the day, a lot of old engineers suddenly had to learn programming just to keep their jobs.

a href="#p71706684" class="quotelink"
&gt;&gt;71706684
/a

br
That is just syntax help, you mong.

a href="#p71706692" class="quotelink"
&gt;&gt;71706692
/a

br
I do the same but my profession is not related to computers.
br
im medfag by trade

a href="#p71706703" class="quotelink"
&gt;&gt;71706703
/a

br
based

a href="#p71706728" class="quotelink"
&gt;&gt;71706728
/a

br
that&#039;s literally what you asked for, retard

a href="#p71706646" class="quotelink"
&gt;&gt;71706646
/a

br
1) No
No Comfort, No Problem Edition
br

br
How to ask for recommendations:
br

span class="quote"
&gt;Budget
/span

br

span class="quote"
&gt;Source
/span

br

span class="quote"
&gt;Type of headphone
/span

br

span class="quote"
&gt;Open or closed
/span

br

span class="quote"
&gt;Comfort level
/span

br

span class="quote"
&gt;Sound signature
/span

br

span class="quote"
&gt;Past headphones 
/span

br

br
For sub-$50 headphones and IEMs, check out the infographic in 
a href="//boards.4channel.org/g/catalog#s=csg" class="quotelink"
&gt;&gt;&gt;/g/csg
/a

br

br
/g/ wiki headphone FAQ: https://wiki.installgentoo.com/inde
wbr
x.php?title=Headphones
br

br
Previous thread: 
a href="/g/thread/71683554#p71683554" class="quotelink"
&gt;&gt;71683554
/a

STAX
First for END GAME

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
the fuck is that plug?

a href="#p71709878" class="quotelink"
&gt;&gt;71709878
/a

br

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
Incels
How do I get the most out of pic related? 
br

br

span class="quote"
&gt;inb4 the trash
/span


a href="#p71710127" class="quotelink"
&gt;&gt;71710127
/a

br
huh?
Any recommendations for cheap (under $100) bluetooth headphones? I don&#039;t expect miracles, just something decently comfortable and portable that doesn&#039;t sound like total ass.
I have a pretty bad ground loop off of my sound card for some reason, does this mean I need to get a DAC

a href="#p71710757" class="quotelink"
&gt;&gt;71710757
/a

br
you might be lucky and it could be something as simple as buying stax

span class="quote"
&gt;Pull some Sony MDRs out of my closet
/span

br

span class="quote"
&gt;They have white powdery WTF all over the leather (fake leather?)
/span

br

br
ahhhhhh
What&#039;s a good amp/DAC combo that I can use between my phone, PC, and Audio-Technica AT-LP60 Turntable? I&#039;ll be using it to drive my beyerdynamic DT 880. I currently have my eyes on the Topping NX4 and the JDS Labs Atom. Will these work with the turntable?

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
I&#039;ve been using my SMSL AD18 with my lp60.  I imagine it has enough power for the DT 880s but you should double check.
br

br
I use it with headphones a pair of klipsh speakers and sub woofer and you can even use phone bt if ya want.  Good for personal use and with friends over.
pls buy my shitty snakeoil

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br

a href="#p71711253" class="quotelink"
&gt;&gt;71711253
/a

br
JDS Atom will work great, but you should really consider replacing that turntable in the long term. Get something used with a counter weight and anti-skate.

a href="#p71711278" class="quotelink"
&gt;&gt;71711278
/a

br
I inherited an older AT turntable from my uncle when he died. I may start using it when I get a chance to look it over.

a href="#p71710865" class="quotelink"
&gt;&gt;71710865
/a

br
Could be mold, happens to my stuff when there&#039;s not enough sun and fresh air.
Will you guys make fun of me if I get the sennheriser game one? I want a mic, and I was initially going to get the HD599 with some modmic frankenstein bullshit setup but if the audio is more or less the same I&#039;d much rather just get the game one.
Arya is endgame.

a href="#p71711371" class="quotelink"
&gt;&gt;71711371
/a

br
Get the PC37X. Same thing, basically, just non-gaymer.

a href="#p71711395" class="quotelink"
&gt;&gt;71711395
/a

br
Ordering from massdrop is aids from where I live. I want to easily be able to return it if I don&#039;t like it.
Do you ever get afraid when hooked up to a powerful amp that it&#039;s going to fail and make you deaf?

a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
If you have any amp made by Schiit, it&#039;s a real concern.
I love listening to my Stax and talking about my Stax and making fun of people that don&#039;t have Stax

a href="#p71711992" class="quotelink"
&gt;&gt;71711992
/a

br
stax is shit bro kill yourself
No Comfort, No Problem Edition
br

br
How to ask for recommendations:
br

span class="quote"
&gt;Budget
/span

br

span class="quote"
&gt;Source
/span

br

span class="quote"
&gt;Type of headphone
/span

br

span class="quote"
&gt;Open or closed
/span

br

span class="quote"
&gt;Comfort level
/span

br

span class="quote"
&gt;Sound signature
/span

br

span class="quote"
&gt;Past headphones 
/span

br

br
For sub-$50 headphones and IEMs, check out the infographic in 
a href="//boards.4channel.org/g/catalog#s=csg" class="quotelink"
&gt;&gt;&gt;/g/csg
/a

br

br
/g/ wiki headphone FAQ: https://wiki.installgentoo.com/inde
wbr
x.php?title=Headphones
br

br
Previous thread: 
a href="/g/thread/71683554#p71683554" class="quotelink"
&gt;&gt;71683554
/a

STAX
First for END GAME

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
the fuck is that plug?

a href="#p71709878" class="quotelink"
&gt;&gt;71709878
/a

br

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
Incels
How do I get the most out of pic related? 
br

br

span class="quote"
&gt;inb4 the trash
/span


a href="#p71710127" class="quotelink"
&gt;&gt;71710127
/a

br
huh?
Any recommendations for cheap (under $100) bluetooth headphones? I don&#039;t expect miracles, just something decently comfortable and portable that doesn&#039;t sound like total ass.
I have a pretty bad ground loop off of my sound card for some reason, does this mean I need to get a DAC

a href="#p71710757" class="quotelink"
&gt;&gt;71710757
/a

br
you might be lucky and it could be something as simple as buying stax

span class="quote"
&gt;Pull some Sony MDRs out of my closet
/span

br

span class="quote"
&gt;They have white powdery WTF all over the leather (fake leather?)
/span

br

br
ahhhhhh
What&#039;s a good amp/DAC combo that I can use between my phone, PC, and Audio-Technica AT-LP60 Turntable? I&#039;ll be using it to drive my beyerdynamic DT 880. I currently have my eyes on the Topping NX4 and the JDS Labs Atom. Will these work with the turntable?

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
I&#039;ve been using my SMSL AD18 with my lp60.  I imagine it has enough power for the DT 880s but you should double check.
br

br
I use it with headphones a pair of klipsh speakers and sub woofer and you can even use phone bt if ya want.  Good for personal use and with friends over.
pls buy my shitty snakeoil

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br

a href="#p71711253" class="quotelink"
&gt;&gt;71711253
/a

br
JDS Atom will work great, but you should really consider replacing that turntable in the long term. Get something used with a counter weight and anti-skate.

a href="#p71711278" class="quotelink"
&gt;&gt;71711278
/a

br
I inherited an older AT turntable from my uncle when he died. I may start using it when I get a chance to look it over.

a href="#p71710865" class="quotelink"
&gt;&gt;71710865
/a

br
Could be mold, happens to my stuff when there&#039;s not enough sun and fresh air.
Will you guys make fun of me if I get the sennheriser game one? I want a mic, and I was initially going to get the HD599 with some modmic frankenstein bullshit setup but if the audio is more or less the same I&#039;d much rather just get the game one.
Arya is endgame.

a href="#p71711371" class="quotelink"
&gt;&gt;71711371
/a

br
Get the PC37X. Same thing, basically, just non-gaymer.

a href="#p71711395" class="quotelink"
&gt;&gt;71711395
/a

br
Ordering from massdrop is aids from where I live. I want to easily be able to return it if I don&#039;t like it.
Do you ever get afraid when hooked up to a powerful amp that it&#039;s going to fail and make you deaf?

a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
If you have any amp made by Schiit, it&#039;s a real concern.
I love listening to my Stax and talking about my Stax and making fun of people that don&#039;t have Stax

a href="#p71711992" class="quotelink"
&gt;&gt;71711992
/a

br
stax is shit bro kill yourself
No Comfort, No Problem Edition
br

br
How to ask for recommendations:
br

span class="quote"
&gt;Budget
/span

br

span class="quote"
&gt;Source
/span

br

span class="quote"
&gt;Type of headphone
/span

br

span class="quote"
&gt;Open or closed
/span

br

span class="quote"
&gt;Comfort level
/span

br

span class="quote"
&gt;Sound signature
/span

br

span class="quote"
&gt;Past headphones 
/span

br

br
For sub-$50 headphones and IEMs, check out the infographic in 
a href="//boards.4channel.org/g/catalog#s=csg" class="quotelink"
&gt;&gt;&gt;/g/csg
/a

br

br
/g/ wiki headphone FAQ: https://wiki.installgentoo.com/inde
wbr
x.php?title=Headphones
br

br
Previous thread: 
a href="/g/thread/71683554#p71683554" class="quotelink"
&gt;&gt;71683554
/a

STAX
First for END GAME

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
the fuck is that plug?

a href="#p71709878" class="quotelink"
&gt;&gt;71709878
/a

br

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
Incels
How do I get the most out of pic related? 
br

br

span class="quote"
&gt;inb4 the trash
/span


a href="#p71710127" class="quotelink"
&gt;&gt;71710127
/a

br
huh?
Any recommendations for cheap (under $100) bluetooth headphones? I don&#039;t expect miracles, just something decently comfortable and portable that doesn&#039;t sound like total ass.
I have a pretty bad ground loop off of my sound card for some reason, does this mean I need to get a DAC

a href="#p71710757" class="quotelink"
&gt;&gt;71710757
/a

br
you might be lucky and it could be something as simple as buying stax

span class="quote"
&gt;Pull some Sony MDRs out of my closet
/span

br

span class="quote"
&gt;They have white powdery WTF all over the leather (fake leather?)
/span

br

br
ahhhhhh
What&#039;s a good amp/DAC combo that I can use between my phone, PC, and Audio-Technica AT-LP60 Turntable? I&#039;ll be using it to drive my beyerdynamic DT 880. I currently have my eyes on the Topping NX4 and the JDS Labs Atom. Will these work with the turntable?

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
I&#039;ve been using my SMSL AD18 with my lp60.  I imagine it has enough power for the DT 880s but you should double check.
br

br
I use it with headphones a pair of klipsh speakers and sub woofer and you can even use phone bt if ya want.  Good for personal use and with friends over.
pls buy my shitty snakeoil

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br

a href="#p71711253" class="quotelink"
&gt;&gt;71711253
/a

br
JDS Atom will work great, but you should really consider replacing that turntable in the long term. Get something used with a counter weight and anti-skate.

a href="#p71711278" class="quotelink"
&gt;&gt;71711278
/a

br
I inherited an older AT turntable from my uncle when he died. I may start using it when I get a chance to look it over.

a href="#p71710865" class="quotelink"
&gt;&gt;71710865
/a

br
Could be mold, happens to my stuff when there&#039;s not enough sun and fresh air.
Will you guys make fun of me if I get the sennheriser game one? I want a mic, and I was initially going to get the HD599 with some modmic frankenstein bullshit setup but if the audio is more or less the same I&#039;d much rather just get the game one.
Arya is endgame.

a href="#p71711371" class="quotelink"
&gt;&gt;71711371
/a

br
Get the PC37X. Same thing, basically, just non-gaymer.

a href="#p71711395" class="quotelink"
&gt;&gt;71711395
/a

br
Ordering from massdrop is aids from where I live. I want to easily be able to return it if I don&#039;t like it.
Do you ever get afraid when hooked up to a powerful amp that it&#039;s going to fail and make you deaf?

a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
If you have any amp made by Schiit, it&#039;s a real concern.
I love listening to my Stax and talking about my Stax and making fun of people that don&#039;t have Stax

a href="#p71711992" class="quotelink"
&gt;&gt;71711992
/a

br
stax is shit bro kill yourself
elex bro
No Comfort, No Problem Edition
br

br
How to ask for recommendations:
br

span class="quote"
&gt;Budget
/span

br

span class="quote"
&gt;Source
/span

br

span class="quote"
&gt;Type of headphone
/span

br

span class="quote"
&gt;Open or closed
/span

br

span class="quote"
&gt;Comfort level
/span

br

span class="quote"
&gt;Sound signature
/span

br

span class="quote"
&gt;Past headphones 
/span

br

br
For sub-$50 headphones and IEMs, check out the infographic in 
a href="//boards.4channel.org/g/catalog#s=csg" class="quotelink"
&gt;&gt;&gt;/g/csg
/a

br

br
/g/ wiki headphone FAQ: https://wiki.installgentoo.com/inde
wbr
x.php?title=Headphones
br

br
Previous thread: 
a href="/g/thread/71683554#p71683554" class="quotelink"
&gt;&gt;71683554
/a

STAX
First for END GAME

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
the fuck is that plug?

a href="#p71709878" class="quotelink"
&gt;&gt;71709878
/a

br

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
Incels
How do I get the most out of pic related? 
br

br

span class="quote"
&gt;inb4 the trash
/span


a href="#p71710127" class="quotelink"
&gt;&gt;71710127
/a

br
huh?
Any recommendations for cheap (under $100) bluetooth headphones? I don&#039;t expect miracles, just something decently comfortable and portable that doesn&#039;t sound like total ass.
I have a pretty bad ground loop off of my sound card for some reason, does this mean I need to get a DAC

a href="#p71710757" class="quotelink"
&gt;&gt;71710757
/a

br
you might be lucky and it could be something as simple as buying stax

span class="quote"
&gt;Pull some Sony MDRs out of my closet
/span

br

span class="quote"
&gt;They have white powdery WTF all over the leather (fake leather?)
/span

br

br
ahhhhhh
What&#039;s a good amp/DAC combo that I can use between my phone, PC, and Audio-Technica AT-LP60 Turntable? I&#039;ll be using it to drive my beyerdynamic DT 880. I currently have my eyes on the Topping NX4 and the JDS Labs Atom. Will these work with the turntable?

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
I&#039;ve been using my SMSL AD18 with my lp60.  I imagine it has enough power for the DT 880s but you should double check.
br

br
I use it with headphones a pair of klipsh speakers and sub woofer and you can even use phone bt if ya want.  Good for personal use and with friends over.
pls buy my shitty snakeoil

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br

a href="#p71711253" class="quotelink"
&gt;&gt;71711253
/a

br
JDS Atom will work great, but you should really consider replacing that turntable in the long term. Get something used with a counter weight and anti-skate.

a href="#p71711278" class="quotelink"
&gt;&gt;71711278
/a

br
I inherited an older AT turntable from my uncle when he died. I may start using it when I get a chance to look it over.

a href="#p71710865" class="quotelink"
&gt;&gt;71710865
/a

br
Could be mold, happens to my stuff when there&#039;s not enough sun and fresh air.
Will you guys make fun of me if I get the sennheriser game one? I want a mic, and I was initially going to get the HD599 with some modmic frankenstein bullshit setup but if the audio is more or less the same I&#039;d much rather just get the game one.
Arya is endgame.

a href="#p71711371" class="quotelink"
&gt;&gt;71711371
/a

br
Get the PC37X. Same thing, basically, just non-gaymer.

a href="#p71711395" class="quotelink"
&gt;&gt;71711395
/a

br
Ordering from massdrop is aids from where I live. I want to easily be able to return it if I don&#039;t like it.
Do you ever get afraid when hooked up to a powerful amp that it&#039;s going to fail and make you deaf?

a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
If you have any amp made by Schiit, it&#039;s a real concern.
I love listening to my Stax and talking about my Stax and making fun of people that don&#039;t have Stax

a href="#p71711992" class="quotelink"
&gt;&gt;71711992
/a

br
stax is shit bro kill yourself
elex bro
No Comfort, No Problem Edition
br

br
How to ask for recommendations:
br

span class="quote"
&gt;Budget
/span

br

span class="quote"
&gt;Source
/span

br

span class="quote"
&gt;Type of headphone
/span

br

span class="quote"
&gt;Open or closed
/span

br

span class="quote"
&gt;Comfort level
/span

br

span class="quote"
&gt;Sound signature
/span

br

span class="quote"
&gt;Past headphones 
/span

br

br
For sub-$50 headphones and IEMs, check out the infographic in 
a href="//boards.4channel.org/g/catalog#s=csg" class="quotelink"
&gt;&gt;&gt;/g/csg
/a

br

br
/g/ wiki headphone FAQ: https://wiki.installgentoo.com/inde
wbr
x.php?title=Headphones
br

br
Previous thread: 
a href="/g/thread/71683554#p71683554" class="quotelink"
&gt;&gt;71683554
/a

STAX
First for END GAME

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
the fuck is that plug?

a href="#p71709878" class="quotelink"
&gt;&gt;71709878
/a

br

a href="#p71709876" class="quotelink"
&gt;&gt;71709876
/a

br
Incels
How do I get the most out of pic related? 
br

br

span class="quote"
&gt;inb4 the trash
/span


a href="#p71710127" class="quotelink"
&gt;&gt;71710127
/a

br
huh?
Any recommendations for cheap (under $100) bluetooth headphones? I don&#039;t expect miracles, just something decently comfortable and portable that doesn&#039;t sound like total ass.
I have a pretty bad ground loop off of my sound card for some reason, does this mean I need to get a DAC

a href="#p71710757" class="quotelink"
&gt;&gt;71710757
/a

br
you might be lucky and it could be something as simple as buying stax

span class="quote"
&gt;Pull some Sony MDRs out of my closet
/span

br

span class="quote"
&gt;They have white powdery WTF all over the leather (fake leather?)
/span

br

br
ahhhhhh
What&#039;s a good amp/DAC combo that I can use between my phone, PC, and Audio-Technica AT-LP60 Turntable? I&#039;ll be using it to drive my beyerdynamic DT 880. I currently have my eyes on the Topping NX4 and the JDS Labs Atom. Will these work with the turntable?

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
I&#039;ve been using my SMSL AD18 with my lp60.  I imagine it has enough power for the DT 880s but you should double check.
br

br
I use it with headphones a pair of klipsh speakers and sub woofer and you can even use phone bt if ya want.  Good for personal use and with friends over.
pls buy my shitty snakeoil

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br

a href="#p71711253" class="quotelink"
&gt;&gt;71711253
/a

br
JDS Atom will work great, but you should really consider replacing that turntable in the long term. Get something used with a counter weight and anti-skate.

a href="#p71711278" class="quotelink"
&gt;&gt;71711278
/a

br
I inherited an older AT turntable from my uncle when he died. I may start using it when I get a chance to look it over.

a href="#p71710865" class="quotelink"
&gt;&gt;71710865
/a

br
Could be mold, happens to my stuff when there&#039;s not enough sun and fresh air.
Will you guys make fun of me if I get the sennheriser game one? I want a mic, and I was initially going to get the HD599 with some modmic frankenstein bullshit setup but if the audio is more or less the same I&#039;d much rather just get the game one.
Arya is endgame.

a href="#p71711371" class="quotelink"
&gt;&gt;71711371
/a

br
Get the PC37X. Same thing, basically, just non-gaymer.

a href="#p71711395" class="quotelink"
&gt;&gt;71711395
/a

br
Ordering from massdrop is aids from where I live. I want to easily be able to return it if I don&#039;t like it.
Do you ever get afraid when hooked up to a powerful amp that it&#039;s going to fail and make you deaf?

a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
If you have any amp made by Schiit, it&#039;s a real concern.
I love listening to my Stax and talking about my Stax and making fun of people that don&#039;t have Stax

a href="#p71711992" class="quotelink"
&gt;&gt;71711992
/a

br
stax is shit bro kill yourself
elex bro

a href="#p71711589" class="quotelink"
&gt;&gt;71711589
/a

br
i remember in 2011 or so when everyone was shilling schiit and I was over here with my meier-corda and audio gd amps like a boss not giving a fuck

a href="#p71712137" class="quotelink"
&gt;&gt;71712137
/a

br
audio-gd and meier are shit too

a href="#p71711120" class="quotelink"
&gt;&gt;71711120
/a

br
how is the lp60

a href="#p71712042" class="quotelink"
&gt;&gt;71712042
/a

br
bro you just posted cringe
Should i buy the ZMF Aeolus?
br
I&#039;m looking fir something relaxing and immersive, i already own stax, he500, and e-mu teaks

a href="#p71712332" class="quotelink"
&gt;&gt;71712332
/a

br
I&#039;d recommend trying the aeolus before buying. I find the cheapest zmf atticus the easiest to recommend.
Rec me decent under $100 headphones, please.

a href="#p71712359" class="quotelink"
&gt;&gt;71712359
/a

br
Not american so no way to try them

a href="#p71712378" class="quotelink"
&gt;&gt;71712378
/a

br
shp9500, ksc75, portapross, CAL!, takstar pro82

a href="#p71712359" class="quotelink"
&gt;&gt;71712359
/a

br

span class="quote"
&gt;atticus
/span


a href="#p71711554" class="quotelink"
&gt;&gt;71711554
/a

br
I love my RME ADI, but if it&#039;s on before the computer, it generates a full scale POP when the USB connects.  I&#039;m lucky my speakers, ears and sphincter are still ok.

span class="quote"
&gt;nostax incels still shilling fecal
/span

br
https://www.reddit.com/r/headphones
wbr
/comments/c8i6nf/focal_elex_mechani
wbr
cal_clipping_in_slomo/

a href="#p71712420" class="quotelink"
&gt;&gt;71712420
/a


a href="#p71712497" class="quotelink"
&gt;&gt;71712497
/a

br

span class="quote"
&gt;Bottom line is that this is far above comfortable listening levels for me, but it happens and it happens very audibly
/span

br

br
I&#039;m sure that most elex owners dont plan on going deaf.

a href="#p71712412" class="quotelink"
&gt;&gt;71712412
/a

br
thanks, dude
Well anon, upon your balding head sits?
What&#039;s the point of DAP&#039;s when streaming anf quad-dac cellphones exist?


a href="#p71712950" class="quotelink"
&gt;&gt;71712950
/a

br
Actual good stax
The /g/ Wiki:
br

a href="http://wiki.installgentoo.com/"
http://wiki.installgentoo.com/
/a

br

br


/g/ is for the discussion of technology and related topics.
br

/g/ is 
b

u
NOT
/u

/b
 your personal tech support team or personal consumer review site.
br

br

For tech support/issues with computers, use 
a href="https://boards.4chan.org/wsr/"
/wsr/ - Worksafe Requests
/a
 or one of the following:
br


a href="https://startpage.com/"
https://startpage.com/
/a
 or 
a href="https://duckduckgo.com"
https://duckduckgo.com
/a
 (i.e., fucking google it)
br


a href="https://stackexchange.com/"
https://stackexchange.com/
/a

br


a href="http://www.logicalincrements.com/"
http://www.logicalincrements.com/
/a

br

br


You can also search the catalog for a specific term by using:
br


a href="https://boards.4chan.org/g/searchword"

a href="https://boards.4chan.org/g/searchword" target="_blank"
https://boards.4chan.org/g/searchwo
wbr
rd
/a

/a
 or by clicking on [Search]
br

br
 

Always check the catalog before creating a thread:
br

a href="https://boards.4chan.org/g/catalog"

a href="/g/catalog" class="quotelink"
&gt;&gt;&gt;/g/catalog
/a

/a

br

br


Please check the rules before you post:
br

a href="https://www.4chan.org/rules"

/a

br


i
Begging for cryptocurrency is against the rules!
/i

br

br


To use the Code tag, book-end your body of code with: [code] and [/code]

/g/ humor
this angers me

a href="#p71712657" class="quotelink"
&gt;&gt;71712657
/a

br
He did a fantastic job at hitting so many pain points.

a href="#p71712639" class="quotelink"
&gt;&gt;71712639
/a

br
DELET THIS

a href="#p71712639" class="quotelink"
&gt;&gt;71712639
/a


a href="#p71712639" class="quotelink"
&gt;&gt;71712639
/a

br
*ting ting ting*
br
*ahem*
br
FUCK this gif and FUCK jannies


name my band

a href="#p71712639" class="quotelink"
&gt;&gt;71712639
/a

br
XDXDXD !!!!!

a href="#p71712746" class="quotelink"
&gt;&gt;71712746
/a

br
glow patrol





a href="#p71712777" class="quotelink"
&gt;&gt;71712777
/a

br
there is another one right below that to

a href="#p71712777" class="quotelink"
&gt;&gt;71712777
/a

br

span class="quote"
&gt;#ThankYouSteve for exploiting the poor labor laws in china and not donating a single cent to any charities
/span


a href="#p71712639" class="quotelink"
&gt;&gt;71712639
/a

br
fuck you op




a href="#p71712732" class="quotelink"
&gt;&gt;71712732
/a

br

span class="quote"
&gt;Meanwhile in Europe
/span

br
How times change

a href="#p71712746" class="quotelink"
&gt;&gt;71712746
/a

br
Somebody edit this with &quot;cyberpunk 2077&quot; logo please.

a href="#p71712777" class="quotelink"
&gt;&gt;71712777
/a

br
Check this trips
Hoe thread. They make my peepee big.

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
they make my peepee big but hurt my heart :(
shes a big guy

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br

span class="quote"
&gt;art hoe
/span

br

span class="quote"
&gt;posts land whale
/span


a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br

span class="quote"
&gt;art hoe
/span

br

span class="quote"
&gt;posts an eggplant
/span


a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
More like Land ho
Fuck an art hoe and you&#039;ll probs get diseased take it from me boss
Ham beast

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
sauce please

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
i think i know her irl
Fat arthoes seriously piss me off
br
They&#039;re using their style to try and cover up what a ginormous disgusting hamplanet they really are

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
What a disgusting human being
ITT: dudes who don&#039;t know big girls got that good yank make you cum too fast then snuggle the fuck outa you 
br

br
BBW neck game deadass a real tenga just give it a try fuck

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br

span class="quote"
&gt;kek
/span


a href="#p14450249" class="quotelink"
&gt;&gt;14450249
/a

br
based

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
Stop posting disgusting whitoid

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
more like an art tractor lmao

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
CRush mE mommy

a href="#p14449932" class="quotelink"
&gt;&gt;14449932
/a

br
For you.

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
More like an art backhoe

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
I hate fat people.

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
ART HOE? MORE LIKE FAT HOE. WHAT THE FUCK WHERE THEY THINKING!?

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
T H I C C

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
her head is so fuckin small lmao, look how big her hand is in comparison
You didn&#039;t even post a human, OP. I guess I have to take over for you.


I&#039;m so fucking horny for art hoes. I want to fuck a coked-out tumblr hipster DIY aesthetic astrology thot in her lip gloss DSL mouth. I want to cum all over a girl with thick frame glasses and edge dyed bobcat bangs. Everytime I hear a THICK, waist-high-jean-clad braindead choker-wearing slutty wiccan minx say &quot;yikes&quot;, &quot;y&#039;all&quot;, &quot;big mood&quot;, &quot;cancelled&quot; or &quot;this is a bop&quot;, I get an uncontrollable urge to run up to her and fondle her d cups and sweaty fat thighs. I want to pour my white olive oil onto her contoured cheeks and neotenous faces and rhinoplatisized nose. I want to finger an art hoe through her jean overalls while pretending to be interested as she talks about van gogh and arctic monkeys and how david foster wallace fans suck and gilles deleuze and VICE news and &#039;union pool&#039; in williamsburg and steven universe and homeopathy and saveur magazine and taking adderallto pass exams. IM SO. Fucking. Horny


a href="#p14450712" class="quotelink"
&gt;&gt;14450712
/a

br
gaddam who is this

a href="#p14450249" class="quotelink"
&gt;&gt;14450249
/a

br
Of course they gotta step up their game because they need to compensate



a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
WHO
honest question
br
how do i get an art gf. im not looking for a hookup. but an actual girlfriend

a href="#p14451060" class="quotelink"
&gt;&gt;14451060
/a

br
tinder. I matched with a lot of them on there by simply not being a complete normie
br
otherwise go to skate parks where they are whoring around, thinking they will get the skaters attention lool

a href="#p14451085" class="quotelink"
&gt;&gt;14451085
/a

br
i&#039;ve tried tinder. all i got was
br
hookups and ppl not feeling the &quot;spark&quot; with me

a href="#p14450760" class="quotelink"
&gt;&gt;14450760
/a

br
If you REALLY wanted to post art, you&#039;d post her anus.

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br

span class="quote"
&gt;imagine the milk
/span

br
sauce pls
why are they all so fucking alluring, what is wrong with me, is this a weird human thing, why am i so attracted to them despite knowing i will likely hate them and their personality?

a href="#p14451160" class="quotelink"
&gt;&gt;14451160
/a

br
you like what you see/know anon, you can&#039;t see through peoples personalities at first so it&#039;s normal.
muh fucking dick

a href="#p14451060" class="quotelink"
&gt;&gt;14451060
/a

br
go to half priced books its the best place to find women not joking

a href="#p14451060" class="quotelink"
&gt;&gt;14451060
/a

br

a href="#p14451214" class="quotelink"
&gt;&gt;14451214
/a

br
its so fucking easy just ask what book they&#039;re looking for/reading and you&#039;ve got a foot in the door

a href="#p14451214" class="quotelink"
&gt;&gt;14451214
/a

br

a href="#p14451217" class="quotelink"
&gt;&gt;14451217
/a

br
im in florida. but there&#039;s a book store near a campus. i&#039;ll start hanging there
br
thx anon

a href="#p14451214" class="quotelink"
&gt;&gt;14451214
/a

br
like the discount books section of a book store? Whats the point they arent actually interested in the books they just want people to think they are and build a public aesthetic.

a href="#p14451223" class="quotelink"
&gt;&gt;14451223
/a

br
it&#039;s a book store. although I&#039;m sure any used book store that has an intellectual vibe will do the trick
br
t. proud Golden Bear

a href="#p14450712" class="quotelink"
&gt;&gt;14450712
/a

br
NNNNAAAAARGH MY FUCKING DICK HNNGHHH WHO?

a href="#p14450633" class="quotelink"
&gt;&gt;14450633
/a

br
based
Ohhhh that’s what an art hoe is.
br

br
You gotta be careful with art hoes, they’re realllllllly slutty. At least the art hoes I know

span class="quote"
&gt;tfw lost virginity to art hoe
/span


a href="#p14451232" class="quotelink"
&gt;&gt;14451232
/a

br
I&#039;ll look out for you at the HPB on Lane, Anon. ;)

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a


a href="#p14450712" class="quotelink"
&gt;&gt;14450712
/a

br
Everytime I see one of these posts

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
Lol

a href="#p14451203" class="quotelink"
&gt;&gt;14451203
/a

br
His too

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
Holy fuck fatties&#039; hands always look so tiny compared to their huge bodies

a href="#p14450249" class="quotelink"
&gt;&gt;14450249
/a

br
The thing is, a big girl is going to fuck you extra hard because she&#039;s enthusiastic about it and doesn&#039;t want to lose you. Sex where the chick is enthusiastic is a lot different.

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
LMAO

a href="#p14451343" class="quotelink"
&gt;&gt;14451343
/a

br
was it worth it

a href="#p14450718" class="quotelink"
&gt;&gt;14450718
/a


a href="#p14450724" class="quotelink"
&gt;&gt;14450724
/a

br

span class="quote"
&gt;braindead
/span

br
why does every hot girl boil down to this. I know it&#039;s just because looks are actually everything and are factor one in deciding how you will be treated. But why does it have to be like this. I can&#039;t keep it hard anymore

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
10/10

a href="#p14449962" class="quotelink"
&gt;&gt;14449962
/a

br
this 
br

br

br
i ate art hoe pussy and got a bacterial infection

a href="#p14450760" class="quotelink"
&gt;&gt;14450760
/a


a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
HAHAHAHAHAHAHAHAHAHAHA

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
I wish all morbidly obese people would dress like this this, it&#039;s a lot less abrasive on the eye

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
Absolutely fucking disgusting

a href="#p14451824" class="quotelink"
&gt;&gt;14451824
/a

br

span class="quote"
&gt;going down on anyone but your wife or long term partner
/span

br
rookie mistake

a href="#p14450633" class="quotelink"
&gt;&gt;14450633
/a

br
Based

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
I&#039;m not even gonna hate on her. I want to her to kill that trend dead and every fat cunt that dresses like this is one fat cunt less dressing like a goth.

a href="#p14450760" class="quotelink"
&gt;&gt;14450760
/a

br
Damn, Hank Hill looks like THAT?

a href="#p14453232" class="quotelink"
&gt;&gt;14453232
/a

br
KEK

a href="#p14453232" class="quotelink"
&gt;&gt;14453232
/a

how do i meet one of these - literally even the one in OP - girls if I&#039;m a short, ugly ethnic?

a href="#p14453715" class="quotelink"
&gt;&gt;14453715
/a

br
Like, yare yare daze, man

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a


a href="#p14450712" class="quotelink"
&gt;&gt;14450712
/a

br

a href="#p14450734" class="quotelink"
&gt;&gt;14450734
/a

br

a href="#p14451247" class="quotelink"
&gt;&gt;14451247
/a

br

a href="#p14451401" class="quotelink"
&gt;&gt;14451401
/a

br
found her
br
https://www.instagram.com/girlbimbo
wbr
/
br

br
im so fucking HORNY and SAD bros 
br
GOD DAMN IT

a href="#p14454689" class="quotelink"
&gt;&gt;14454689
/a

br
w2c

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a


a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
No tits wide hips yet no ass,
br
How do fat chicks end up like this!?

a href="#p14451452" class="quotelink"
&gt;&gt;14451452
/a

br
vastly underrated post

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
kek

a href="#p14449939" class="quotelink"
&gt;&gt;14449939
/a

br
noice

a href="#p14449928" class="quotelink"
&gt;&gt;14449928
/a

br
You look like you have a town bf who has time to catch people faving your tweets

a href="#p14454689" class="quotelink"
&gt;&gt;14454689
/a

br
holy fuck what a bod

a href="#p14453740" class="quotelink"
&gt;&gt;14453740
/a

br
you go the fuck back and find a short ugly ethnic art hoe somewhere else

a href="#p14454689" class="quotelink"
&gt;&gt;14454689
/a

br
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wbr
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wbr
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wbr
AAAAAAAHHHHHHHHHHHHHHHHHHHHHHHHHHHH
wbr
HHHHH
